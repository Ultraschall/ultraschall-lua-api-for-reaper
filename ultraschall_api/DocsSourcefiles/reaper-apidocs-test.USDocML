<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<USDocBloc>
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>1.Introduction</slug>
        <title>1 Introduction to ReaScript</title>
        <description>
            ## ReaScript API as of Reaper 6.29
            
            REAPER provides an API (advanced programming interface) for users and third parties to create extended functionality. API functions can be called from a compiled C/C++ dynamic library that is loaded by REAPER, or at run-time by user-created ReaScripts that can be written using REAPER's own editor.

            ReaScripts can be written in EEL2, a specialized language that is also used to write JSFX; Lua, a popular scripting language; or Python, another scripting language. EEL and Lua are embedded within REAPER and require no additional downloads or settings. Python must be downloaded and installed separately, and enabled in REAPER preferences.

            A script named "\_\_startup.lua|.eel" will be started automatically by Reaper at startup. You can have both; Reaper will run \_\_startup.eel first, \_\_startup.lua second.
            This \_\_startup-script doesn't need to be registered into the actionlist of Reaper; it's pure existence in the scripts-folder of the resources-folder of Reaper is sufficient for it to be run.
            
            Learn more about ReaScript: [http://www.cockos.com/reaper/sdk/reascript/reascript.php](http://www.cockos.com/reaper/sdk/reascript/reascript.php).
            
            This documentation includes the functions provided by SWS: [sws-extension.org](https://www.sws-extension.org) as well as Julian Sader's plugin, that can be installed via ReaPack.
            
            The IDE in Reaper has some limitations, as every line must not exceed 4095 characters, or they will be split when the script is loaded the next time.
            
            The base-directory for files created from ReaScript can be read from the reaper.ini -> [REAPER)] -> lastcwd=
            That means, if you create a new file without giving it a path, it will be created in the path set in lastcwd.
            
            Note: a lot of the functions in this document require 3rd-party-extensions. You can find and install them from here:  
                SWS: [https://www.sws-extension.org](https://www.sws-extension.org)  
                JS-extension: [https://forum.cockos.com/showthread.php?t=212174](Official Forum's-thread)  
                ReaPack: [https://reapack.com/](https://reapack.com/)  
                ReaImGui: [https://forum.cockos.com/showthread.php?t=250419](Official Forum's-thread)  
                Osara: [https://osara.reaperaccessibility.com/](https://osara.reaperaccessibility.com/)  
                ReaBlink: [https://github.com/ak5k/reablink/releases/](https://github.com/ak5k/reablink/releases/)
        </description>
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            API-Documentation
        </chapter_context>
        <tags>documentation, introduction, reascript</tags>
    </US_DocBloc>

    <US_DocBloc version="1.0" prog_lang="cpp" spok_lang="en">
        <slug>2.1.cpp_desc</slug>
        <title>2.1 CPP Api-Description</title>
        <description markup_type="markdown" markup_version="1.0.1" indent="default">
            ### Usage of the Reaper Api in C++
            Note: the C++ pure virtual interfaces used require the MSVC-compatible C++ ABI on Win32.  Sorry, mingw users.

            Reaper extensions: see [http://www.cockos.com/reaper/sdk/plugin/plugin.php](http://www.cockos.com/reaper/sdk/plugin/plugin.php) and reaper\_plugin.h.
            The API functions in this header can be retrieved using reaper\_plugin\_info\_t.GetFunc() or by using the Action "[developer] Write C++ API functions header" directly in Reaper.

            VST plugins: see [http://www.cockos.com/reaper/sdk/vst/vst\_ext.php](http://www.cockos.com/reaper/sdk/vst/vst_ext.php)
            The API functions in this header can be retrieved using audioMasterCallback.

            Because the API is dynamic, callers should never assume a function exists.
            Check that a non-NULL function pointer was returned before using it (unless
            loaded functions are verified using REAPERAPI\_LoadAPI(), see note below).

            New (4.76+) usage of this file:
           -  1) most source files should just #include "reaper\_plugin\_functions.h" as is.
           -  2) one file should #define REAPERAPI\_IMPLEMENT before including this file.
           -  3) the plug-in should call REAPERAPI\_LoadAPI(rec->GetFunc) from REAPER\_PLUGIN\_ENTRYPOINT
           -     and check the return value for errors (REAPERAPI\_LoadAPI will return 0 on success).

              By default, all functions listed in this file are loaded. This means that an older version
              of REAPER may not succeed in loading, and also it may bloat your plug-in. If you wish to only load
              needed functions, #define REAPERAPI\_MINIMAL and various #define REAPERAPI\_WANT_&lt;functionname&gt; lines
              before including this file. You must put these definitions where REAPERAPI\_IMPLEMENT is defined
              and you can optionally put them elsewhere (to detect needed REAPERAPI\_WANT\_xxx lines at compile-
              time rather than link-time).

        </description>
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper_plugin.h</source_document>
        <chapter_context>
            API-Documentation
        </chapter_context>
        <tags>documentation, introduction, eel</tags>
    </US_DocBloc>

    <US_DocBloc version="1.0" spok_lang="en" prog_lang="eel">
        <slug>2.2.eel_desc</slug>
        <title>2.2 EEL Api-Description</title>
        <description markup_type="markdown" markup_version="1.0.1" indent="default">
            ### ReaScript/EEL API
            
            For information on the EEL2 language, please see the [EEL2 User Guide](https://www.cockos.com/EEL2/)

            ReaScript/EEL scripts can call API functions using functionname().

            Parameters that return information are effectively passed by reference, not value. If an API returns a string value, it will usually be as the first parameter.

            Examples:
                // function returning a single (scalar) value:
                sec = [parse\_timestr("1:12")](#parse_timestr);

                // function returning information in the first parameter (function returns void):
                [GetProjectPath(#string)](#GetProjectPath);

                // lower volume of track 3 by half:
                tr = [GetTrack(0, 2)](#GetTrack);
                [GetTrackUIVolPan(tr, vol, pan)](#GetTrackUIVolPan);
                [SetMediaTrackInfo\_Value(tr, "D_VOL", vol*0.5)](#SetMediaTrackInfo_Value);

            ReaScript/EEL can import functions from other reascripts using @import filename.eel -- note that only the file's functions will be imported, normal code in that file will not be executed.
        </description>
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            API-Documentation
        </chapter_context>
        <tags>documentation, introduction, eel</tags>
    </US_DocBloc>

    <US_DocBloc version="1.0" spok_lang="en" prog_lang="python">
        <slug>2.3.python_desc</slug>
        <title>2.3 Python Api-Description</title>
        <description markup_type="markdown" markup_version="1.0.1" indent="default">
            ### ReaScript/Python API            

            ReaScript/Python requires a recent version of Python installed on this machine. Python is available from multiple sources [as a free download](http://www.python.org/download). After installing Python, REAPER may detect the Python dynamic library automatically. If not, you can enter the path in the ReaScript preferences page, at Options/Preferences/Plug-Ins/ReaScript.

            ReaScript/Python scripts can call API functions using RPR\_functionname().

            All parameters are passed by value, not reference. API functions that cannot return information in the parameter list will return a single value. API functions that can return any information in the parameter list will return a list of values; The first value in the list will be the function return value (unless the function is declared to return void).

            Examples:
                # function returning a single (scalar) value:
                sec = [RPR\_parse\_timestr("1:12")](#parse_timestr)

                # function returning information in the first parameter (function returns void):
                (str) = [RPR\_GetProjectPath("", 512)](#GetProjectPath)

                # lower volume of track 3 by half (RPR\_GetTrackUIVolPan returns Bool):
                tr = [RPR\_GetTrack(0, 2)](#GetTrack)
                (ok, tr, vol, pan) = [RPR\_GetTrackUIVolPan(tr, 0, 0)](#GetTrackUIVolPan)
                # this also works, if you only care about one of the returned values:
                vol = [RPR\_GetTrackUIVolPan(tr, 0, 0)[2]](#GetTrackUIVolPan)
                [RPR\_SetMediaTrackInfo\_Value(tr, "D\_VOL", vol*0.5)](#SetMediaTrackInfo_Value)

            You can create and save modules of useful functions that you can import into other ReaScripts. For example, if you create a file called reascript\_utility.py that contains the function helpful\_function(), you can import that file into any Python ReaScript with the line:
            import reascript\_utility
            and call the function by using:
            reascript\_utility.helpful\_function()

            Note that ReaScripts must explicitly import the REAPER python module, even if the script is imported into another ReaScript:
            from reaper\_python import *
        </description>
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            API-Documentation
        </chapter_context>
        <tags>documentation, introduction, python</tags>
    </US_DocBloc>

    <US_DocBloc version="1.0" spok_lang="en" prog_lang="lua">
        <slug>2.4.lua_desc</slug>
        <title>2.4 Lua Api-Description</title>
        <description markup_type="markdown" markup_version="1.0.1" indent="default">
            ### ReaScript/Lua API

            ReaScript/Lua scripts can call API functions using reaper.functionname().

            Some functions return multiple values. In many cases, some function parameters are ignored, especially when similarly named parameters are present in the returned values.

            Examples:
                -- function returning a single (scalar) value:
                sec = reaper.[parse\_timestr("1:12")](#parse_timestr)

                -- function with an ignored (dummy) parameter:
                path = reaper.[GetProjectPath("")](#GetProjectPath)

                -- lower volume of track 3 by half:
                tr = reaper.[GetTrack(0, 2)](#GetTrack)
                ok, vol, pan = reaper.[GetTrackUIVolPan(tr, 0, 0)](#GetTrackUIVolPan)
                reaper.[SetMediaTrackInfo\_Value(tr, "D_VOL", vol*0.5)](#SetMediaTrackInfo_Value)

            ReaScript/Lua can import functions from other ReaScripts using require. If the files are not being found, it is probably a path problem (remember that lua paths are wildcard patterns, not just directory listings, see details [here](http://www.lua.org/pil/8.1.html)). 
        </description>
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            API-Documentation
        </chapter_context>
        <tags>documentation, introduction, lua</tags>
    </US_DocBloc>

    <US_DocBloc version="1.0" spok_lang="en">
        <slug>3.Datatypes_used_in_this_document</slug>
        <title>3 Datatypes used in this document</title>
        <description markup_type="markdown" markup_version="1.0.1" indent="default">
                ### Datatypes used in this document
                
                boolean - accepts only true or false as values  
                optional boolean - a boolean, that can be given, but is not required  
                number - can be integer, double or a floating-point-number  
                optional number - a number, that can be given, but is not required  
                integer - only integer numbers allowed  
                reaper.array - a special array, that Reaper provides  
                string - a string of characters/text  
                optional string - a string, that can be given, but is not required  

                AudioAccessor - Audio Accessor object for a track or a media-item  
                BR\_Envelope \(BR\) - an envelope-object, created from a track or take-envelope  
                HWND - a window  
                IReaperControlSurface - a ControlSurface, e.g. OSC-devices  
                joystick\_device - a joystick-device  
                KbdSectionInfo - Keyboard Section Info,   
                -        0, Main  
                -        100, Main (alt recording)  
                -        32060, MIDI Editor  
                -        32061, MIDI Event List Editor  
                -        32062, MIDI Inline Editor  
                -        32063, Media Explorer  
                PCM\_source - the audiosource of a MediaItem  
                ReaProject - a project within Reaper; 0 for current open project\(-tab\); in [EnumProjects](#EnumProjects), it is an object, not a number!  
                RprMidiTake \(FNG\) - ReaperMidiTake as object  
                RprMidiNote \(FNG\) - RprMidiNote as object  
                MediaTrack - a Reaper-Track as object  
                MediaItem - a Reaper-MediaItem like audio,video, Midi, etc as object  
                MediaItem\_Take - a take within a MediaItem as object  
                TrackEnvelope - an envelope of a track as object  
                WDL\_FastString\(S&M\) - a different kind of a string, made into a Reaper-object  
                
                deviceHDC - get it using function [JS\_GDI_GetWindowDC](#JS_GDI_GetWindowDC)
        </description>
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper_plugin.h</source_document>
        <chapter_context>
            API-Documentation
        </chapter_context>
        <tags>documentation, introduction, eel</tags>
    </US_DocBloc>


    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>AddMediaItemToTrack</slug>
        <title>AddMediaItemToTrack</title>
        <functioncall prog_lang="cpp">MediaItem* item AddMediaItemToTrack(MediaTrack* tr)</functioncall>
        <functioncall prog_lang="eel">MediaItem item AddMediaItemToTrack(MediaTrack tr)</functioncall>
        <functioncall prog_lang="lua">MediaItem item = reaper.AddMediaItemToTrack(MediaTrack tr)</functioncall>
        <functioncall prog_lang="python">MediaItem item RPR_AddMediaItemToTrack(MediaTrack tr)</functioncall>
        <requires>
            Reaper=5.62

        </requires>
        <description markup_type="markdown" markup_version="1.0.1">
            Creates a new media item. It will be empty and therefore not be shown in the arrange-view, until you associate a mediafile(audio, picture, video, etc) or a length and position to it using [SetMediaItemInfo\_Value](#SetMediaItemInfo_Value)
        </description>
        <retvals markup_type="markdown" markup_version="1.0.1">
            MediaItem item - the newly created MediaItem-object
        </retvals>
        <parameters>
            MediaTrack tr - tracknumber(zero based), with 0 for track 1, 1 for track 2, etc.
        </parameters>
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            Mediaitem Management
        </chapter_context>
        <tags>mediaitemmanagement, mediaitem, item, track, empty</tags>
    </US_DocBloc>

<US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_AcceptDragDropPayload</slug>
        <title>ImGui_AcceptDragDropPayload</title>
        <functioncall prog_lang="cpp">bool ImGui_AcceptDragDropPayload(ImGui_Context* ctx, const char* type, char* payloadOutNeedBig, int payloadOutNeedBig_sz, int* flagsInOptional)</functioncall>
        <functioncall prog_lang="eel">bool extension_api("ImGui_AcceptDragDropPayload", ImGui_Context ctx, "type", #payload, optional int flagsIn)</functioncall>
        <functioncall prog_lang="lua">boolean retval, string payload = reaper.ImGui_AcceptDragDropPayload(ImGui_Context ctx, string type, string payload, optional number flagsIn)</functioncall>
        <functioncall prog_lang="python">bool ImGui_AcceptDragDropPayload(ImGui_Context* ctx, const char* type, char* payloadOutNeedBig, int payloadOutNeedBig_sz, int* flagsInOptional)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Accept contents of a given type. If ImGui_DragDropFlags_AcceptBeforeDelivery is set you can peek into the payload before the mouse button is released.
            
            Default values: flags = ImGui_DragDropFlags_None
        </description>        
        <retvals>
            boolean retval - 
            string payload - -
        </retvals>        
        <parameters>
            ImGui_Context ctx - 
            string type - 
            string payload - 
            optional number flagsIn -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_AcceptDragDropPayloadFiles</slug>
        <title>ImGui_AcceptDragDropPayloadFiles</title>
        <functioncall prog_lang="cpp">bool ImGui_AcceptDragDropPayloadFiles(ImGui_Context* ctx, int* countOut, int* flagsInOptional)</functioncall>
        <functioncall prog_lang="eel">bool extension_api("ImGui_AcceptDragDropPayloadFiles", ImGui_Context ctx, int &amp;count, optional int flagsIn)</functioncall>
        <functioncall prog_lang="lua">boolean retval, number count = reaper.ImGui_AcceptDragDropPayloadFiles(ImGui_Context ctx, number count, optional number flagsIn)</functioncall>
        <functioncall prog_lang="python">bool ImGui_AcceptDragDropPayloadFiles(ImGui_Context* ctx, int* countOut, int* flagsInOptional)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Accept contents of a RGBA color. See <a href="#ImGui_AcceptDragDropPayload">ImGui_AcceptDragDropPayload</a>.
            
            Default values: flags = ImGui_DragDropFlags_None
        </description>        
        <retvals>
            boolean retval - 
            number count - -
        </retvals>        
        <parameters>
            ImGui_Context ctx - 
            number count - 
            optional number flagsIn -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_AcceptDragDropPayloadRGB</slug>
        <title>ImGui_AcceptDragDropPayloadRGB</title>
        <functioncall prog_lang="cpp">bool ImGui_AcceptDragDropPayloadRGB(ImGui_Context* ctx, int* rgbOut, int* flagsInOptional)</functioncall>
        <functioncall prog_lang="eel">bool extension_api("ImGui_AcceptDragDropPayloadRGB", ImGui_Context ctx, int &amp;rgb, optional int flagsIn)</functioncall>
        <functioncall prog_lang="lua">boolean retval, number rgb = reaper.ImGui_AcceptDragDropPayloadRGB(ImGui_Context ctx, number rgb, optional number flagsIn)</functioncall>
        <functioncall prog_lang="python">bool ImGui_AcceptDragDropPayloadRGB(ImGui_Context* ctx, int* rgbOut, int* flagsInOptional)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Accept contents of a RGB color. See <a href="#ImGui_AcceptDragDropPayload">ImGui_AcceptDragDropPayload</a>.
            
            Default values: flags = ImGui_DragDropFlags_None
        </description>        
        <retvals>
            boolean retval - 
            number rgb - -
        </retvals>        
        <parameters>
            ImGui_Context ctx - 
            number rgb - 
            optional number flagsIn -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_AcceptDragDropPayloadRGBA</slug>
        <title>ImGui_AcceptDragDropPayloadRGBA</title>
        <functioncall prog_lang="cpp">bool ImGui_AcceptDragDropPayloadRGBA(ImGui_Context* ctx, int* rgbaOut, int* flagsInOptional)</functioncall>
        <functioncall prog_lang="eel">bool extension_api("ImGui_AcceptDragDropPayloadRGBA", ImGui_Context ctx, int &amp;rgba, optional int flagsIn)</functioncall>
        <functioncall prog_lang="lua">boolean retval, number rgba = reaper.ImGui_AcceptDragDropPayloadRGBA(ImGui_Context ctx, number rgba, optional number flagsIn)</functioncall>
        <functioncall prog_lang="python">bool ImGui_AcceptDragDropPayloadRGBA(ImGui_Context* ctx, int* rgbaOut, int* flagsInOptional)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Accept contents of a RGBA color. See <a href="#ImGui_AcceptDragDropPayload">ImGui_AcceptDragDropPayload</a>.
            
            Default values: flags = ImGui_DragDropFlags_None
        </description>        
        <retvals>
            boolean retval - 
            number rgba - -
        </retvals>        
        <parameters>
            ImGui_Context ctx - 
            number rgba - 
            optional number flagsIn -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_AlignTextToFramePadding</slug>
        <title>ImGui_AlignTextToFramePadding</title>
        <functioncall prog_lang="cpp">void ImGui_AlignTextToFramePadding(ImGui_Context* ctx)</functioncall>
        <functioncall prog_lang="eel">extension_api("ImGui_AlignTextToFramePadding", ImGui_Context ctx)</functioncall>
        <functioncall prog_lang="lua">reaper.ImGui_AlignTextToFramePadding(ImGui_Context ctx)</functioncall>
        <functioncall prog_lang="python">void ImGui_AlignTextToFramePadding(ImGui_Context* ctx)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Vertically align upcoming text baseline to FramePadding.y so that it will align properly to regularly framed items (call if you have text on a line before a framed item)
        </description>        
        <parameters>
            ImGui_Context ctx -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_ArrowButton</slug>
        <title>ImGui_ArrowButton</title>
        <functioncall prog_lang="cpp">bool ImGui_ArrowButton(ImGui_Context* ctx, const char* str_id, int dir)</functioncall>
        <functioncall prog_lang="eel">bool extension_api("ImGui_ArrowButton", ImGui_Context ctx, "str_id", int dir)</functioncall>
        <functioncall prog_lang="lua">boolean reaper.ImGui_ArrowButton(ImGui_Context ctx, string str_id, integer dir)</functioncall>
        <functioncall prog_lang="python">bool ImGui_ArrowButton(ImGui_Context* ctx, const char* str_id, int dir)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Square button with an arrow shape
        </description>        
        <retvals>
            boolean -
        </retvals>        
        <parameters>
            ImGui_Context ctx - 
            string str_id - 
            integer dir -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_AttachFont</slug>
        <title>ImGui_AttachFont</title>
        <functioncall prog_lang="cpp">void ImGui_AttachFont(ImGui_Context* ctx, ImGui_Font* font)</functioncall>
        <functioncall prog_lang="eel">extension_api("ImGui_AttachFont", ImGui_Context ctx, ImGui_Font font)</functioncall>
        <functioncall prog_lang="lua">reaper.ImGui_AttachFont(ImGui_Context ctxImGui_Font font)</functioncall>
        <functioncall prog_lang="python">void ImGui_AttachFont(ImGui_Context* ctx, ImGui_Font* font)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Enable a font for use in the given context. Fonts must be attached as soon as possible after creating the context or on a new defer cycle.
        </description>        
        <parameters>
            ImGui_Context ctxImGui_Font font -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Begin</slug>
        <title>ImGui_Begin</title>
        <functioncall prog_lang="cpp">bool ImGui_Begin(ImGui_Context* ctx, const char* name, bool* p_openInOptional, int* flagsInOptional)</functioncall>
        <functioncall prog_lang="eel">bool extension_api("ImGui_Begin", ImGui_Context ctx, "name", optional bool p_openIn, optional int flagsIn)</functioncall>
        <functioncall prog_lang="lua">boolean reaper.ImGui_Begin(ImGui_Context ctx, string name, optional boolean p_openIn, optional number flagsIn)</functioncall>
        <functioncall prog_lang="python">bool ImGui_Begin(ImGui_Context* ctx, const char* name, bool* p_openInOptional, int* flagsInOptional)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Push window to the stack and start appending to it. See <a href="#ImGui_End">ImGui_End</a>.
            
            - Passing 'open' shows a window-closing widget in the upper-right corner of the window, which clicking will set the boolean to false when clicked.
            - You may append multiple times to the same window during the same frame by calling Begin()/End() pairs multiple times. Some information such as 'flags' or 'open' will only be considered by the first call to Begin().
            - Begin() return false to indicate the window is collapsed or fully clipped, so you may early out and omit submitting anything to the window. Always call a matching End() for each Begin() call, regardless of its return value!
              [Important: due to legacy reason, this is inconsistent with most other functions such as BeginMenu/EndMenu, BeginPopup/EndPopup, etc. where the EndXXX call should only be called if the corresponding BeginXXX function returned true. Begin and BeginChild are the only odd ones out. Will be fixed in a future update.]
            - Note that the bottom of window stack always contains a window called "Debug".
            
            Default values: p_open = nil, flags = ImGui_WindowFlags_None
        </description>        
        <retvals>
            boolean -
        </retvals>        
        <parameters>
            ImGui_Context ctx - 
            string name - 
            optional boolean p_openIn - 
            optional number flagsIn -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_BeginChild</slug>
        <title>ImGui_BeginChild</title>
        <functioncall prog_lang="cpp">bool ImGui_BeginChild(ImGui_Context* ctx, const char* str_id, double* size_wInOptional, double* size_hInOptional, bool* borderInOptional, int* flagsInOptional)</functioncall>
        <functioncall prog_lang="eel">bool extension_api("ImGui_BeginChild", ImGui_Context ctx, "str_id", optional size_wIn, optional size_hIn, optional bool borderIn, optional int flagsIn)</functioncall>
        <functioncall prog_lang="lua">boolean reaper.ImGui_BeginChild(ImGui_Context ctx, string str_id, optional number size_wIn, optional number size_hIn, optional boolean borderIn, optional number flagsIn)</functioncall>
        <functioncall prog_lang="python">bool ImGui_BeginChild(ImGui_Context* ctx, const char* str_id, double* size_wInOptional, double* size_hInOptional, bool* borderInOptional, int* flagsInOptional)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Use child windows to begin into a self-contained independent scrolling/clipping regions within a host window. Child windows can embed their own child.
            - For each independent axis of 'size': ==0.0f: use remaining host window size / &gt;0.0f: fixed size / &lt;0.0f: use remaining window size minus abs(size) / Each axis can use a different mode, e.g. ImVec2(0,400).
            - BeginChild() returns false to indicate the window is collapsed or fully clipped, so you may early out and omit submitting anything to the window.
              Always call a matching EndChild() for each BeginChild() call, regardless of its return value.
              [Important: due to legacy reason, this is inconsistent with most other functions such as BeginMenu/EndMenu,
               BeginPopup/EndPopup, etc. where the EndXXX call should only be called if the corresponding BeginXXX function
               returned true. Begin and BeginChild are the only odd ones out. Will be fixed in a future update.]
            
            Default values: size_w = 0.0, size_h = 0.0, border = false, flags = ImGui_WindowFlags_None
        </description>        
        <retvals>
            boolean -
        </retvals>        
        <parameters>
            ImGui_Context ctx - 
            string str_id - 
            optional number size_wIn - 
            optional number size_hIn - 
            optional boolean borderIn - 
            optional number flagsIn -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_BeginChildFrame</slug>
        <title>ImGui_BeginChildFrame</title>
        <functioncall prog_lang="cpp">bool ImGui_BeginChildFrame(ImGui_Context* ctx, const char* str_id, double size_w, double size_h, int* flagsInOptional)</functioncall>
        <functioncall prog_lang="eel">bool extension_api("ImGui_BeginChildFrame", ImGui_Context ctx, "str_id", size_w, size_h, optional int flagsIn)</functioncall>
        <functioncall prog_lang="lua">boolean reaper.ImGui_BeginChildFrame(ImGui_Context ctx, string str_id, number size_w, number size_h, optional number flagsIn)</functioncall>
        <functioncall prog_lang="python">bool ImGui_BeginChildFrame(ImGui_Context* ctx, const char* str_id, double size_w, double size_h, int* flagsInOptional)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Helper to create a child window / scrolling region that looks like a normal widget frame.
            
            Default values: flags = ImGui_WindowFlags_None
        </description>        
        <retvals>
            boolean -
        </retvals>        
        <parameters>
            ImGui_Context ctx - 
            string str_id - 
            number size_w - 
            number size_h - 
            optional number flagsIn -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_BeginCombo</slug>
        <title>ImGui_BeginCombo</title>
        <functioncall prog_lang="cpp">bool ImGui_BeginCombo(ImGui_Context* ctx, const char* label, const char* preview_value, int* flagsInOptional)</functioncall>
        <functioncall prog_lang="eel">bool extension_api("ImGui_BeginCombo", ImGui_Context ctx, "label", "preview_value", optional int flagsIn)</functioncall>
        <functioncall prog_lang="lua">boolean reaper.ImGui_BeginCombo(ImGui_Context ctx, string label, string preview_value, optional number flagsIn)</functioncall>
        <functioncall prog_lang="python">bool ImGui_BeginCombo(ImGui_Context* ctx, const char* label, const char* preview_value, int* flagsInOptional)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            The BeginCombo()/EndCombo() api allows you to manage your contents and selection state however you want it, by creating e.g. Selectable() items.
            
            Default values: flags = ImGui_ComboFlags_None
        </description>        
        <retvals>
            boolean -
        </retvals>        
        <parameters>
            ImGui_Context ctx - 
            string label - 
            string preview_value - 
            optional number flagsIn -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_BeginDragDropSource</slug>
        <title>ImGui_BeginDragDropSource</title>
        <functioncall prog_lang="cpp">bool ImGui_BeginDragDropSource(ImGui_Context* ctx, int* flagsInOptional)</functioncall>
        <functioncall prog_lang="eel">bool extension_api("ImGui_BeginDragDropSource", ImGui_Context ctx, optional int flagsIn)</functioncall>
        <functioncall prog_lang="lua">boolean reaper.ImGui_BeginDragDropSource(ImGui_Context ctx, optional number flagsIn)</functioncall>
        <functioncall prog_lang="python">bool ImGui_BeginDragDropSource(ImGui_Context* ctx, int* flagsInOptional)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Call when the current item is active. If this return true, you can call SetDragDropPayload() + EndDragDropSource().
            
            If you stop calling BeginDragDropSource() the payload is preserved however it won't have a preview tooltip (we currently display a fallback "..." tooltip as replacement).
            
            Default values: flags = ImGui_DragDropFlags_None
        </description>        
        <retvals>
            boolean -
        </retvals>        
        <parameters>
            ImGui_Context ctx - 
            optional number flagsIn -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_BeginDragDropTarget</slug>
        <title>ImGui_BeginDragDropTarget</title>
        <functioncall prog_lang="cpp">bool ImGui_BeginDragDropTarget(ImGui_Context* ctx)</functioncall>
        <functioncall prog_lang="eel">bool extension_api("ImGui_BeginDragDropTarget", ImGui_Context ctx)</functioncall>
        <functioncall prog_lang="lua">boolean reaper.ImGui_BeginDragDropTarget(ImGui_Context ctx)</functioncall>
        <functioncall prog_lang="python">bool ImGui_BeginDragDropTarget(ImGui_Context* ctx)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Call after submitting an item that may receive a payload. If this returns true, you can call AcceptDragDropPayload() + EndDragDropTarget()
        </description>        
        <retvals>
            boolean -
        </retvals>        
        <parameters>
            ImGui_Context ctx -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_BeginGroup</slug>
        <title>ImGui_BeginGroup</title>
        <functioncall prog_lang="cpp">void ImGui_BeginGroup(ImGui_Context* ctx)</functioncall>
        <functioncall prog_lang="eel">extension_api("ImGui_BeginGroup", ImGui_Context ctx)</functioncall>
        <functioncall prog_lang="lua">reaper.ImGui_BeginGroup(ImGui_Context ctx)</functioncall>
        <functioncall prog_lang="python">void ImGui_BeginGroup(ImGui_Context* ctx)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Lock horizontal starting position. See <a href="#ImGui_EndGroup">ImGui_EndGroup</a>.
        </description>        
        <parameters>
            ImGui_Context ctx -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_BeginListBox</slug>
        <title>ImGui_BeginListBox</title>
        <functioncall prog_lang="cpp">bool ImGui_BeginListBox(ImGui_Context* ctx, const char* label, double* size_wInOptional, double* size_hInOptional)</functioncall>
        <functioncall prog_lang="eel">bool extension_api("ImGui_BeginListBox", ImGui_Context ctx, "label", optional size_wIn, optional size_hIn)</functioncall>
        <functioncall prog_lang="lua">boolean reaper.ImGui_BeginListBox(ImGui_Context ctx, string label, optional number size_wIn, optional number size_hIn)</functioncall>
        <functioncall prog_lang="python">bool ImGui_BeginListBox(ImGui_Context* ctx, const char* label, double* size_wInOptional, double* size_hInOptional)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Open a framed scrolling region.  This is essentially a thin wrapper to using BeginChild/EndChild with some stylistic changes.
            
            The BeginListBox()/EndListBox() api allows you to manage your contents and selection state however you want it, by creating e.g. Selectable() or any items.
            
            - Choose frame width:   width  &gt; 0.0: custom  /  width  &lt; 0.0 or -FLT_MIN: right-align   /  width  = 0.0 (default): use current ItemWidth
            - Choose frame height:  height &gt; 0.0: custom  /  height &lt; 0.0 or -FLT_MIN: bottom-align  /  height = 0.0 (default): arbitrary default height which can fit ~7 items
            
            Default values: size_w = 0.0, size_h = 0.0
            
            See <a href="#ImGui_EndListBox">ImGui_EndListBox</a>.
        </description>        
        <retvals>
            boolean -
        </retvals>        
        <parameters>
            ImGui_Context ctx - 
            string label - 
            optional number size_wIn - 
            optional number size_hIn -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_BeginMainMenuBar</slug>
        <title>ImGui_BeginMainMenuBar</title>
        <functioncall prog_lang="cpp">bool ImGui_BeginMainMenuBar(ImGui_Context* ctx)</functioncall>
        <functioncall prog_lang="eel">bool extension_api("ImGui_BeginMainMenuBar", ImGui_Context ctx)</functioncall>
        <functioncall prog_lang="lua">boolean reaper.ImGui_BeginMainMenuBar(ImGui_Context ctx)</functioncall>
        <functioncall prog_lang="python">bool ImGui_BeginMainMenuBar(ImGui_Context* ctx)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Create a menu bar at the top of the screen and append to it.
        </description>        
        <retvals>
            boolean -
        </retvals>        
        <parameters>
            ImGui_Context ctx -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_BeginMenu</slug>
        <title>ImGui_BeginMenu</title>
        <functioncall prog_lang="cpp">bool ImGui_BeginMenu(ImGui_Context* ctx, const char* label, bool* enabledInOptional)</functioncall>
        <functioncall prog_lang="eel">bool extension_api("ImGui_BeginMenu", ImGui_Context ctx, "label", optional bool enabledIn)</functioncall>
        <functioncall prog_lang="lua">boolean reaper.ImGui_BeginMenu(ImGui_Context ctx, string label, optional boolean enabledIn)</functioncall>
        <functioncall prog_lang="python">bool ImGui_BeginMenu(ImGui_Context* ctx, const char* label, bool* enabledInOptional)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Create a sub-menu entry. only call EndMenu() if this returns true! See <a href="#ImGui_EndMenu">ImGui_EndMenu</a>.
            
            Default values: enabled = true
        </description>        
        <retvals>
            boolean -
        </retvals>        
        <parameters>
            ImGui_Context ctx - 
            string label - 
            optional boolean enabledIn -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_BeginMenuBar</slug>
        <title>ImGui_BeginMenuBar</title>
        <functioncall prog_lang="cpp">bool ImGui_BeginMenuBar(ImGui_Context* ctx)</functioncall>
        <functioncall prog_lang="eel">bool extension_api("ImGui_BeginMenuBar", ImGui_Context ctx)</functioncall>
        <functioncall prog_lang="lua">boolean reaper.ImGui_BeginMenuBar(ImGui_Context ctx)</functioncall>
        <functioncall prog_lang="python">bool ImGui_BeginMenuBar(ImGui_Context* ctx)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Append to menu-bar of current window (requires ImGui_WindowFlags_MenuBar flag set on parent window). See <a href="#ImGui_EndMenuBar">ImGui_EndMenuBar</a>.
        </description>        
        <retvals>
            boolean -
        </retvals>        
        <parameters>
            ImGui_Context ctx -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_BeginPopup</slug>
        <title>ImGui_BeginPopup</title>
        <functioncall prog_lang="cpp">bool ImGui_BeginPopup(ImGui_Context* ctx, const char* str_id, int* flagsInOptional)</functioncall>
        <functioncall prog_lang="eel">bool extension_api("ImGui_BeginPopup", ImGui_Context ctx, "str_id", optional int flagsIn)</functioncall>
        <functioncall prog_lang="lua">boolean reaper.ImGui_BeginPopup(ImGui_Context ctx, string str_id, optional number flagsIn)</functioncall>
        <functioncall prog_lang="python">bool ImGui_BeginPopup(ImGui_Context* ctx, const char* str_id, int* flagsInOptional)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Popups, Modals
            - They block normal mouse hovering detection (and therefore most mouse interactions) behind them.
            - If not modal: they can be closed by clicking anywhere outside them, or by pressing ESCAPE.
            - Their visibility state (~bool) is held internally instead of being held by the programmer as we are used to with regular Begin*() calls.
            - The 3 properties above are related: we need to retain popup visibility state in the library because popups may be closed as any time.
            - You can bypass the hovering restriction by using ImGuiHoveredFlags_AllowWhenBlockedByPopup when calling IsItemHovered() or IsWindowHovered().
            - IMPORTANT: Popup identifiers are relative to the current ID stack, so OpenPopup and BeginPopup generally needs to be at the same level of the stack.
            
            Query popup state, if open start appending into the window. Call EndPopup() afterwards. ImGuiWindowFlags are forwarded to the window.
            
            Return true if the popup is open, and you can start outputting to it.
            
            Default values: flags = ImGui_WindowFlags_None
        </description>        
        <retvals>
            boolean -
        </retvals>        
        <parameters>
            ImGui_Context ctx - 
            string str_id - 
            optional number flagsIn -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_BeginPopupContextItem</slug>
        <title>ImGui_BeginPopupContextItem</title>
        <functioncall prog_lang="cpp">bool ImGui_BeginPopupContextItem(ImGui_Context* ctx, const char* str_idInOptional, int* popup_flagsInOptional)</functioncall>
        <functioncall prog_lang="eel">bool extension_api("ImGui_BeginPopupContextItem", ImGui_Context ctx, optional "str_idIn", optional int popup_flagsIn)</functioncall>
        <functioncall prog_lang="lua">boolean reaper.ImGui_BeginPopupContextItem(ImGui_Context ctx, optional string str_idIn, optional number popup_flagsIn)</functioncall>
        <functioncall prog_lang="python">bool ImGui_BeginPopupContextItem(ImGui_Context* ctx, const char* str_idInOptional, int* popup_flagsInOptional)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            This is a helper to handle the simplest case of associating one named popup to one given widget. You can pass a NULL str_id to use the identifier of the last item. This is essentially the same as calling OpenPopupOnItemClick() + BeginPopup() but written to avoid computing the ID twice because BeginPopupContextXXX functions may be called very frequently.
            
            Open+begin popup when clicked on last item. if you can pass a NULL str_id only if the previous item had an id. If you want to use that on a non-interactive item such as Text() you need to pass in an explicit ID here.
            
            - IMPORTANT: Notice that BeginPopupContextXXX takes ImGuiPopupFlags just like OpenPopup() and unlike BeginPopup().
            - IMPORTANT: we exceptionally default their flags to 1 (== ImGuiPopupFlags_MouseButtonRight) for backward compatibility with older API taking 'int mouse_button = 1' parameter, so if you add other flags remember to re-add the ImGuiPopupFlags_MouseButtonRight.
            
            Default values: str_id = nil, popup_flags = ImGui_PopupFlags_MouseButtonRight
        </description>        
        <retvals>
            boolean -
        </retvals>        
        <parameters>
            ImGui_Context ctx - 
            optional string str_idIn - 
            optional number popup_flagsIn -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_BeginPopupContextVoid</slug>
        <title>ImGui_BeginPopupContextVoid</title>
        <functioncall prog_lang="cpp">bool ImGui_BeginPopupContextVoid(ImGui_Context* ctx, const char* str_idInOptional, int* popup_flagsInOptional)</functioncall>
        <functioncall prog_lang="eel">bool extension_api("ImGui_BeginPopupContextVoid", ImGui_Context ctx, optional "str_idIn", optional int popup_flagsIn)</functioncall>
        <functioncall prog_lang="lua">boolean reaper.ImGui_BeginPopupContextVoid(ImGui_Context ctx, optional string str_idIn, optional number popup_flagsIn)</functioncall>
        <functioncall prog_lang="python">bool ImGui_BeginPopupContextVoid(ImGui_Context* ctx, const char* str_idInOptional, int* popup_flagsInOptional)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Open+begin popup when clicked in void (where there are no windows).
            
            Default values: str_id = nil, popup_flags = ImGui_PopupFlags_MouseButtonRight
        </description>        
        <retvals>
            boolean -
        </retvals>        
        <parameters>
            ImGui_Context ctx - 
            optional string str_idIn - 
            optional number popup_flagsIn -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_BeginPopupContextWindow</slug>
        <title>ImGui_BeginPopupContextWindow</title>
        <functioncall prog_lang="cpp">bool ImGui_BeginPopupContextWindow(ImGui_Context* ctx, const char* str_idInOptional, int* popup_flagsInOptional)</functioncall>
        <functioncall prog_lang="eel">bool extension_api("ImGui_BeginPopupContextWindow", ImGui_Context ctx, optional "str_idIn", optional int popup_flagsIn)</functioncall>
        <functioncall prog_lang="lua">boolean reaper.ImGui_BeginPopupContextWindow(ImGui_Context ctx, optional string str_idIn, optional number popup_flagsIn)</functioncall>
        <functioncall prog_lang="python">bool ImGui_BeginPopupContextWindow(ImGui_Context* ctx, const char* str_idInOptional, int* popup_flagsInOptional)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Open+begin popup when clicked on current window.
            
            Default values: str_id = nil, popup_flags = ImGui_PopupFlags_MouseButtonRight
        </description>        
        <retvals>
            boolean -
        </retvals>        
        <parameters>
            ImGui_Context ctx - 
            optional string str_idIn - 
            optional number popup_flagsIn -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_BeginPopupModal</slug>
        <title>ImGui_BeginPopupModal</title>
        <functioncall prog_lang="cpp">bool ImGui_BeginPopupModal(ImGui_Context* ctx, const char* name, bool* p_openInOptional, int* flagsInOptional)</functioncall>
        <functioncall prog_lang="eel">bool extension_api("ImGui_BeginPopupModal", ImGui_Context ctx, "name", optional bool p_openIn, optional int flagsIn)</functioncall>
        <functioncall prog_lang="lua">boolean reaper.ImGui_BeginPopupModal(ImGui_Context ctx, string name, optional boolean p_openIn, optional number flagsIn)</functioncall>
        <functioncall prog_lang="python">bool ImGui_BeginPopupModal(ImGui_Context* ctx, const char* name, bool* p_openInOptional, int* flagsInOptional)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Block every interactions behind the window, cannot be closed by user, add a dimming background, has a title bar. Return true if the modal is open, and you can start outputting to it. See <a href="#ImGui_BeginPopup">ImGui_BeginPopup</a>.
            
            Default values: p_open = nil, flags = ImGui_WindowFlags_None
        </description>        
        <retvals>
            boolean -
        </retvals>        
        <parameters>
            ImGui_Context ctx - 
            string name - 
            optional boolean p_openIn - 
            optional number flagsIn -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_BeginTabBar</slug>
        <title>ImGui_BeginTabBar</title>
        <functioncall prog_lang="cpp">bool ImGui_BeginTabBar(ImGui_Context* ctx, const char* str_id, int* flagsInOptional)</functioncall>
        <functioncall prog_lang="eel">bool extension_api("ImGui_BeginTabBar", ImGui_Context ctx, "str_id", optional int flagsIn)</functioncall>
        <functioncall prog_lang="lua">boolean reaper.ImGui_BeginTabBar(ImGui_Context ctx, string str_id, optional number flagsIn)</functioncall>
        <functioncall prog_lang="python">bool ImGui_BeginTabBar(ImGui_Context* ctx, const char* str_id, int* flagsInOptional)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Create and append into a TabBar.
            
            Default values: flags = ImGui_TabBarFlags_None
        </description>        
        <retvals>
            boolean -
        </retvals>        
        <parameters>
            ImGui_Context ctx - 
            string str_id - 
            optional number flagsIn -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_BeginTabItem</slug>
        <title>ImGui_BeginTabItem</title>
        <functioncall prog_lang="cpp">bool ImGui_BeginTabItem(ImGui_Context* ctx, const char* label, bool* p_openInOptional, int* flagsInOptional)</functioncall>
        <functioncall prog_lang="eel">bool extension_api("ImGui_BeginTabItem", ImGui_Context ctx, "label", optional bool p_openIn, optional int flagsIn)</functioncall>
        <functioncall prog_lang="lua">boolean reaper.ImGui_BeginTabItem(ImGui_Context ctx, string label, optional boolean p_openIn, optional number flagsIn)</functioncall>
        <functioncall prog_lang="python">bool ImGui_BeginTabItem(ImGui_Context* ctx, const char* label, bool* p_openInOptional, int* flagsInOptional)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Create a Tab. Returns true if the Tab is selected.
            
            Default values: p_open = nil, flags = ImGui_TabItemFlags_None
            'open' is read/write.
        </description>        
        <retvals>
            boolean -
        </retvals>        
        <parameters>
            ImGui_Context ctx - 
            string label - 
            optional boolean p_openIn - 
            optional number flagsIn -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_BeginTable</slug>
        <title>ImGui_BeginTable</title>
        <functioncall prog_lang="cpp">bool ImGui_BeginTable(ImGui_Context* ctx, const char* str_id, int column, int* flagsInOptional, double* outer_size_wInOptional, double* outer_size_hInOptional, double* inner_widthInOptional)</functioncall>
        <functioncall prog_lang="eel">bool extension_api("ImGui_BeginTable", ImGui_Context ctx, "str_id", int column, optional int flagsIn, optional outer_size_wIn, optional outer_size_hIn, optional inner_widthIn)</functioncall>
        <functioncall prog_lang="lua">boolean reaper.ImGui_BeginTable(ImGui_Context ctx, string str_id, integer column, optional number flagsIn, optional number outer_size_wIn, optional number outer_size_hIn, optional number inner_widthIn)</functioncall>
        <functioncall prog_lang="python">bool ImGui_BeginTable(ImGui_Context* ctx, const char* str_id, int column, int* flagsInOptional, double* outer_size_wInOptional, double* outer_size_hInOptional, double* inner_widthInOptional)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            [BETA API] API may evolve slightly! If you use this, please update to the next version when it comes out!
            - Full-featured replacement for old Columns API.
            - See Demo-&gt;Tables for demo code.
            - See top of imgui_tables.cpp for general commentary.
            - See ImGuiTableFlags_ and ImGuiTableColumnFlags_ enums for a description of available flags.
            The typical call flow is:
            - 1. Call BeginTable().
            - 2. Optionally call TableSetupColumn() to submit column name/flags/defaults.
            - 3. Optionally call TableSetupScrollFreeze() to request scroll freezing of columns/rows.
            - 4. Optionally call TableHeadersRow() to submit a header row. Names are pulled from TableSetupColumn() data.
            - 5. Populate contents:
              - In most situations you can use TableNextRow() + TableSetColumnIndex(N) to start appending into a column.
              - If you are using tables as a sort of grid, where every columns is holding the same type of contents,
                you may prefer using TableNextColumn() instead of TableNextRow() + TableSetColumnIndex().
                TableNextColumn() will automatically wrap-around into the next row if needed.
              - IMPORTANT: Comparatively to the old Columns() API, we need to call TableNextColumn() for the first column!
              - Summary of possible call flow:
            --------------------------------------------------------------------------------------------------------
             TableNextRow() -&gt; TableSetColumnIndex(0) -&gt; Text("Hello 0") -&gt; TableSetColumnIndex(1) -&gt; Text("Hello 1") // OK
             TableNextRow() -&gt; TableNextColumn() -&gt; Text("Hello 0") -&gt; TableNextColumn() -&gt; Text("Hello 1") // OK
             TableNextColumn() -&gt; Text("Hello 0") -&gt; TableNextColumn() -&gt; Text("Hello 1") // OK: TableNextColumn() automatically gets to next row!
             TableNextRow() -&gt; Text("Hello 0") // Not OK! Missing TableSetColumnIndex() or TableNextColumn()! Text will not appear!
            --------------------------------------------------------------------------------------------------------
            - 5. Call EndTable()
            
            Default values: flags = ImGui_TableFlags_None, outer_size_w = 0.0, outer_size_h = 0.0, inner_width = 0.0
        </description>        
        <retvals>
            boolean -
        </retvals>        
        <parameters>
            ImGui_Context ctx - 
            string str_id - 
            integer column - 
            optional number flagsIn - 
            optional number outer_size_wIn - 
            optional number outer_size_hIn - 
            optional number inner_widthIn -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_BeginTooltip</slug>
        <title>ImGui_BeginTooltip</title>
        <functioncall prog_lang="cpp">void ImGui_BeginTooltip(ImGui_Context* ctx)</functioncall>
        <functioncall prog_lang="eel">extension_api("ImGui_BeginTooltip", ImGui_Context ctx)</functioncall>
        <functioncall prog_lang="lua">reaper.ImGui_BeginTooltip(ImGui_Context ctx)</functioncall>
        <functioncall prog_lang="python">void ImGui_BeginTooltip(ImGui_Context* ctx)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Begin/append a tooltip window. to create full-featured tooltip (with any kind of items).
        </description>        
        <parameters>
            ImGui_Context ctx -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Bullet</slug>
        <title>ImGui_Bullet</title>
        <functioncall prog_lang="cpp">void ImGui_Bullet(ImGui_Context* ctx)</functioncall>
        <functioncall prog_lang="eel">extension_api("ImGui_Bullet", ImGui_Context ctx)</functioncall>
        <functioncall prog_lang="lua">reaper.ImGui_Bullet(ImGui_Context ctx)</functioncall>
        <functioncall prog_lang="python">void ImGui_Bullet(ImGui_Context* ctx)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Draw a small circle + keep the cursor on the same line. advance cursor x position by GetTreeNodeToLabelSpacing(), same distance that TreeNode() uses.
        </description>        
        <parameters>
            ImGui_Context ctx -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_BulletText</slug>
        <title>ImGui_BulletText</title>
        <functioncall prog_lang="cpp">void ImGui_BulletText(ImGui_Context* ctx, const char* text)</functioncall>
        <functioncall prog_lang="eel">extension_api("ImGui_BulletText", ImGui_Context ctx, "text")</functioncall>
        <functioncall prog_lang="lua">reaper.ImGui_BulletText(ImGui_Context ctx, string text)</functioncall>
        <functioncall prog_lang="python">void ImGui_BulletText(ImGui_Context* ctx, const char* text)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Shortcut for Bullet()+Text()
        </description>        
        <parameters>
            ImGui_Context ctx - 
            string text -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Button</slug>
        <title>ImGui_Button</title>
        <functioncall prog_lang="cpp">bool ImGui_Button(ImGui_Context* ctx, const char* label, double* size_wInOptional, double* size_hInOptional)</functioncall>
        <functioncall prog_lang="eel">bool extension_api("ImGui_Button", ImGui_Context ctx, "label", optional size_wIn, optional size_hIn)</functioncall>
        <functioncall prog_lang="lua">boolean reaper.ImGui_Button(ImGui_Context ctx, string label, optional number size_wIn, optional number size_hIn)</functioncall>
        <functioncall prog_lang="python">bool ImGui_Button(ImGui_Context* ctx, const char* label, double* size_wInOptional, double* size_hInOptional)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Most widgets return true when the value has been changed or when pressed/selected
            You may also use one of the many IsItemXXX functions (e.g. IsItemActive, IsItemHovered, etc.) to query widget state.
            
            Default values: size_w = 0.0, size_h = 0.0
        </description>        
        <retvals>
            boolean -
        </retvals>        
        <parameters>
            ImGui_Context ctx - 
            string label - 
            optional number size_wIn - 
            optional number size_hIn -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_ButtonFlags_MouseButtonLeft</slug>
        <title>ImGui_ButtonFlags_MouseButtonLeft</title>
        <functioncall prog_lang="cpp">int ImGui_ButtonFlags_MouseButtonLeft()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_ButtonFlags_MouseButtonLeft")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_ButtonFlags_MouseButtonLeft()</functioncall>
        <functioncall prog_lang="python">int ImGui_ButtonFlags_MouseButtonLeft()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            React on left mouse button (default)
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_ButtonFlags_MouseButtonMiddle</slug>
        <title>ImGui_ButtonFlags_MouseButtonMiddle</title>
        <functioncall prog_lang="cpp">int ImGui_ButtonFlags_MouseButtonMiddle()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_ButtonFlags_MouseButtonMiddle")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_ButtonFlags_MouseButtonMiddle()</functioncall>
        <functioncall prog_lang="python">int ImGui_ButtonFlags_MouseButtonMiddle()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            React on center mouse button
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_ButtonFlags_MouseButtonRight</slug>
        <title>ImGui_ButtonFlags_MouseButtonRight</title>
        <functioncall prog_lang="cpp">int ImGui_ButtonFlags_MouseButtonRight()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_ButtonFlags_MouseButtonRight")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_ButtonFlags_MouseButtonRight()</functioncall>
        <functioncall prog_lang="python">int ImGui_ButtonFlags_MouseButtonRight()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            React on right mouse button
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_ButtonFlags_None</slug>
        <title>ImGui_ButtonFlags_None</title>
        <functioncall prog_lang="cpp">int ImGui_ButtonFlags_None()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_ButtonFlags_None")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_ButtonFlags_None()</functioncall>
        <functioncall prog_lang="python">int ImGui_ButtonFlags_None()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Flags: for InvisibleButton()
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_CalcItemWidth</slug>
        <title>ImGui_CalcItemWidth</title>
        <functioncall prog_lang="cpp">double ImGui_CalcItemWidth(ImGui_Context* ctx)</functioncall>
        <functioncall prog_lang="eel">double extension_api("ImGui_CalcItemWidth", ImGui_Context ctx)</functioncall>
        <functioncall prog_lang="lua">number reaper.ImGui_CalcItemWidth(ImGui_Context ctx)</functioncall>
        <functioncall prog_lang="python">double ImGui_CalcItemWidth(ImGui_Context* ctx)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Width of item given pushed settings and current cursor position. NOT necessarily the width of last item unlike most 'Item' functions.
        </description>        
        <retvals>
            number -
        </retvals>        
        <parameters>
            ImGui_Context ctx -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_CalcTextSize</slug>
        <title>ImGui_CalcTextSize</title>
        <functioncall prog_lang="cpp">void ImGui_CalcTextSize(ImGui_Context* ctx, const char* text, double* wOut, double* hOut, bool* hide_text_after_double_hashInOptional, double* wrap_widthInOptional)</functioncall>
        <functioncall prog_lang="eel">extension_api("ImGui_CalcTextSize", ImGui_Context ctx, "text", &amp;w, &amp;h, optional bool hide_text_after_double_hashIn, optional wrap_widthIn)</functioncall>
        <functioncall prog_lang="lua">number w, number h = reaper.ImGui_CalcTextSize(ImGui_Context ctx, string text, number w, number h, optional boolean hide_text_after_double_hashIn, optional number wrap_widthIn)</functioncall>
        <functioncall prog_lang="python">void ImGui_CalcTextSize(ImGui_Context* ctx, const char* text, double* wOut, double* hOut, bool* hide_text_after_double_hashInOptional, double* wrap_widthInOptional)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Default values: hide_text_after_double_hash = false, wrap_width = -1.0
        </description>        
        <retvals>
            number w - 
            number h - -
        </retvals>        
        <parameters>
            ImGui_Context ctx - 
            string text - 
            number w - 
            number h - 
            optional boolean hide_text_after_double_hashIn - 
            optional number wrap_widthIn -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_CaptureKeyboardFromApp</slug>
        <title>ImGui_CaptureKeyboardFromApp</title>
        <functioncall prog_lang="cpp">void ImGui_CaptureKeyboardFromApp(ImGui_Context* ctx, bool* want_capture_keyboard_valueInOptional)</functioncall>
        <functioncall prog_lang="eel">extension_api("ImGui_CaptureKeyboardFromApp", ImGui_Context ctx, optional bool want_capture_keyboard_valueIn)</functioncall>
        <functioncall prog_lang="lua">reaper.ImGui_CaptureKeyboardFromApp(ImGui_Context ctx, optional boolean want_capture_keyboard_valueIn)</functioncall>
        <functioncall prog_lang="python">void ImGui_CaptureKeyboardFromApp(ImGui_Context* ctx, bool* want_capture_keyboard_valueInOptional)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Manually enable or disable capture of keyboard shortcuts in the global scope for the next frame.
            
            Default values: want_capture_keyboard_value = true
        </description>        
        <parameters>
            ImGui_Context ctx - 
            optional boolean want_capture_keyboard_valueIn -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Checkbox</slug>
        <title>ImGui_Checkbox</title>
        <functioncall prog_lang="cpp">bool ImGui_Checkbox(ImGui_Context* ctx, const char* label, bool* vInOut)</functioncall>
        <functioncall prog_lang="eel">bool extension_api("ImGui_Checkbox", ImGui_Context ctx, "label", bool &amp;v)</functioncall>
        <functioncall prog_lang="lua">boolean retval, boolean v = reaper.ImGui_Checkbox(ImGui_Context ctx, string label, boolean v)</functioncall>
        <functioncall prog_lang="python">bool ImGui_Checkbox(ImGui_Context* ctx, const char* label, bool* vInOut)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
        </description>        
        <retvals>
            boolean retval - 
            boolean v - -
        </retvals>        
        <parameters>
            ImGui_Context ctx - 
            string label - 
            boolean v -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_CheckboxFlags</slug>
        <title>ImGui_CheckboxFlags</title>
        <functioncall prog_lang="cpp">bool ImGui_CheckboxFlags(ImGui_Context* ctx, const char* label, int* flagsInOut, int flags_value)</functioncall>
        <functioncall prog_lang="eel">bool extension_api("ImGui_CheckboxFlags", ImGui_Context ctx, "label", int &amp;flags, int flags_value)</functioncall>
        <functioncall prog_lang="lua">boolean retval, number flags = reaper.ImGui_CheckboxFlags(ImGui_Context ctx, string label, number flags, integer flags_value)</functioncall>
        <functioncall prog_lang="python">bool ImGui_CheckboxFlags(ImGui_Context* ctx, const char* label, int* flagsInOut, int flags_value)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
        </description>        
        <retvals>
            boolean retval - 
            number flags - -
        </retvals>        
        <parameters>
            ImGui_Context ctx - 
            string label - 
            number flags - 
            integer flags_value -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_CloseCurrentPopup</slug>
        <title>ImGui_CloseCurrentPopup</title>
        <functioncall prog_lang="cpp">void ImGui_CloseCurrentPopup(ImGui_Context* ctx)</functioncall>
        <functioncall prog_lang="eel">extension_api("ImGui_CloseCurrentPopup", ImGui_Context ctx)</functioncall>
        <functioncall prog_lang="lua">reaper.ImGui_CloseCurrentPopup(ImGui_Context ctx)</functioncall>
        <functioncall prog_lang="python">void ImGui_CloseCurrentPopup(ImGui_Context* ctx)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Manually close the popup we have begin-ed into. Use inside the BeginPopup()/EndPopup() scope to close manually.
            
            CloseCurrentPopup() is called by default by Selectable()/MenuItem() when activateda
        </description>        
        <parameters>
            ImGui_Context ctx -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Col_Border</slug>
        <title>ImGui_Col_Border</title>
        <functioncall prog_lang="cpp">int ImGui_Col_Border()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Col_Border")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Col_Border()</functioncall>
        <functioncall prog_lang="python">int ImGui_Col_Border()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Col_BorderShadow</slug>
        <title>ImGui_Col_BorderShadow</title>
        <functioncall prog_lang="cpp">int ImGui_Col_BorderShadow()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Col_BorderShadow")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Col_BorderShadow()</functioncall>
        <functioncall prog_lang="python">int ImGui_Col_BorderShadow()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Col_Button</slug>
        <title>ImGui_Col_Button</title>
        <functioncall prog_lang="cpp">int ImGui_Col_Button()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Col_Button")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Col_Button()</functioncall>
        <functioncall prog_lang="python">int ImGui_Col_Button()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Col_ButtonActive</slug>
        <title>ImGui_Col_ButtonActive</title>
        <functioncall prog_lang="cpp">int ImGui_Col_ButtonActive()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Col_ButtonActive")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Col_ButtonActive()</functioncall>
        <functioncall prog_lang="python">int ImGui_Col_ButtonActive()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Col_ButtonHovered</slug>
        <title>ImGui_Col_ButtonHovered</title>
        <functioncall prog_lang="cpp">int ImGui_Col_ButtonHovered()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Col_ButtonHovered")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Col_ButtonHovered()</functioncall>
        <functioncall prog_lang="python">int ImGui_Col_ButtonHovered()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Col_CheckMark</slug>
        <title>ImGui_Col_CheckMark</title>
        <functioncall prog_lang="cpp">int ImGui_Col_CheckMark()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Col_CheckMark")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Col_CheckMark()</functioncall>
        <functioncall prog_lang="python">int ImGui_Col_CheckMark()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Col_ChildBg</slug>
        <title>ImGui_Col_ChildBg</title>
        <functioncall prog_lang="cpp">int ImGui_Col_ChildBg()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Col_ChildBg")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Col_ChildBg()</functioncall>
        <functioncall prog_lang="python">int ImGui_Col_ChildBg()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Background of child windows
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Col_DragDropTarget</slug>
        <title>ImGui_Col_DragDropTarget</title>
        <functioncall prog_lang="cpp">int ImGui_Col_DragDropTarget()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Col_DragDropTarget")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Col_DragDropTarget()</functioncall>
        <functioncall prog_lang="python">int ImGui_Col_DragDropTarget()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Col_FrameBg</slug>
        <title>ImGui_Col_FrameBg</title>
        <functioncall prog_lang="cpp">int ImGui_Col_FrameBg()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Col_FrameBg")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Col_FrameBg()</functioncall>
        <functioncall prog_lang="python">int ImGui_Col_FrameBg()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Background of checkbox, radio button, plot, slider, text input
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Col_FrameBgActive</slug>
        <title>ImGui_Col_FrameBgActive</title>
        <functioncall prog_lang="cpp">int ImGui_Col_FrameBgActive()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Col_FrameBgActive")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Col_FrameBgActive()</functioncall>
        <functioncall prog_lang="python">int ImGui_Col_FrameBgActive()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Col_FrameBgHovered</slug>
        <title>ImGui_Col_FrameBgHovered</title>
        <functioncall prog_lang="cpp">int ImGui_Col_FrameBgHovered()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Col_FrameBgHovered")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Col_FrameBgHovered()</functioncall>
        <functioncall prog_lang="python">int ImGui_Col_FrameBgHovered()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Col_Header</slug>
        <title>ImGui_Col_Header</title>
        <functioncall prog_lang="cpp">int ImGui_Col_Header()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Col_Header")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Col_Header()</functioncall>
        <functioncall prog_lang="python">int ImGui_Col_Header()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Header* colors are used for CollapsingHeader, TreeNode, Selectable, MenuItem
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Col_HeaderActive</slug>
        <title>ImGui_Col_HeaderActive</title>
        <functioncall prog_lang="cpp">int ImGui_Col_HeaderActive()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Col_HeaderActive")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Col_HeaderActive()</functioncall>
        <functioncall prog_lang="python">int ImGui_Col_HeaderActive()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Col_HeaderHovered</slug>
        <title>ImGui_Col_HeaderHovered</title>
        <functioncall prog_lang="cpp">int ImGui_Col_HeaderHovered()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Col_HeaderHovered")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Col_HeaderHovered()</functioncall>
        <functioncall prog_lang="python">int ImGui_Col_HeaderHovered()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Col_MenuBarBg</slug>
        <title>ImGui_Col_MenuBarBg</title>
        <functioncall prog_lang="cpp">int ImGui_Col_MenuBarBg()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Col_MenuBarBg")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Col_MenuBarBg()</functioncall>
        <functioncall prog_lang="python">int ImGui_Col_MenuBarBg()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Col_ModalWindowDimBg</slug>
        <title>ImGui_Col_ModalWindowDimBg</title>
        <functioncall prog_lang="cpp">int ImGui_Col_ModalWindowDimBg()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Col_ModalWindowDimBg")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Col_ModalWindowDimBg()</functioncall>
        <functioncall prog_lang="python">int ImGui_Col_ModalWindowDimBg()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Darken/colorize entire screen behind a modal window, when one is active
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Col_NavHighlight</slug>
        <title>ImGui_Col_NavHighlight</title>
        <functioncall prog_lang="cpp">int ImGui_Col_NavHighlight()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Col_NavHighlight")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Col_NavHighlight()</functioncall>
        <functioncall prog_lang="python">int ImGui_Col_NavHighlight()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Gamepad/keyboard: current highlighted item
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Col_NavWindowingDimBg</slug>
        <title>ImGui_Col_NavWindowingDimBg</title>
        <functioncall prog_lang="cpp">int ImGui_Col_NavWindowingDimBg()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Col_NavWindowingDimBg")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Col_NavWindowingDimBg()</functioncall>
        <functioncall prog_lang="python">int ImGui_Col_NavWindowingDimBg()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Darken/colorize entire screen behind the CTRL+TAB window list, when active
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Col_NavWindowingHighlight</slug>
        <title>ImGui_Col_NavWindowingHighlight</title>
        <functioncall prog_lang="cpp">int ImGui_Col_NavWindowingHighlight()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Col_NavWindowingHighlight")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Col_NavWindowingHighlight()</functioncall>
        <functioncall prog_lang="python">int ImGui_Col_NavWindowingHighlight()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Highlight window when using CTRL+TAB
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Col_PlotHistogram</slug>
        <title>ImGui_Col_PlotHistogram</title>
        <functioncall prog_lang="cpp">int ImGui_Col_PlotHistogram()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Col_PlotHistogram")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Col_PlotHistogram()</functioncall>
        <functioncall prog_lang="python">int ImGui_Col_PlotHistogram()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Col_PlotHistogramHovered</slug>
        <title>ImGui_Col_PlotHistogramHovered</title>
        <functioncall prog_lang="cpp">int ImGui_Col_PlotHistogramHovered()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Col_PlotHistogramHovered")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Col_PlotHistogramHovered()</functioncall>
        <functioncall prog_lang="python">int ImGui_Col_PlotHistogramHovered()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Col_PlotLines</slug>
        <title>ImGui_Col_PlotLines</title>
        <functioncall prog_lang="cpp">int ImGui_Col_PlotLines()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Col_PlotLines")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Col_PlotLines()</functioncall>
        <functioncall prog_lang="python">int ImGui_Col_PlotLines()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Col_PlotLinesHovered</slug>
        <title>ImGui_Col_PlotLinesHovered</title>
        <functioncall prog_lang="cpp">int ImGui_Col_PlotLinesHovered()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Col_PlotLinesHovered")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Col_PlotLinesHovered()</functioncall>
        <functioncall prog_lang="python">int ImGui_Col_PlotLinesHovered()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Col_PopupBg</slug>
        <title>ImGui_Col_PopupBg</title>
        <functioncall prog_lang="cpp">int ImGui_Col_PopupBg()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Col_PopupBg")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Col_PopupBg()</functioncall>
        <functioncall prog_lang="python">int ImGui_Col_PopupBg()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Background of popups, menus, tooltips windows
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Col_ResizeGrip</slug>
        <title>ImGui_Col_ResizeGrip</title>
        <functioncall prog_lang="cpp">int ImGui_Col_ResizeGrip()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Col_ResizeGrip")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Col_ResizeGrip()</functioncall>
        <functioncall prog_lang="python">int ImGui_Col_ResizeGrip()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Col_ResizeGripActive</slug>
        <title>ImGui_Col_ResizeGripActive</title>
        <functioncall prog_lang="cpp">int ImGui_Col_ResizeGripActive()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Col_ResizeGripActive")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Col_ResizeGripActive()</functioncall>
        <functioncall prog_lang="python">int ImGui_Col_ResizeGripActive()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Col_ResizeGripHovered</slug>
        <title>ImGui_Col_ResizeGripHovered</title>
        <functioncall prog_lang="cpp">int ImGui_Col_ResizeGripHovered()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Col_ResizeGripHovered")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Col_ResizeGripHovered()</functioncall>
        <functioncall prog_lang="python">int ImGui_Col_ResizeGripHovered()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Col_ScrollbarBg</slug>
        <title>ImGui_Col_ScrollbarBg</title>
        <functioncall prog_lang="cpp">int ImGui_Col_ScrollbarBg()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Col_ScrollbarBg")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Col_ScrollbarBg()</functioncall>
        <functioncall prog_lang="python">int ImGui_Col_ScrollbarBg()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Col_ScrollbarGrab</slug>
        <title>ImGui_Col_ScrollbarGrab</title>
        <functioncall prog_lang="cpp">int ImGui_Col_ScrollbarGrab()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Col_ScrollbarGrab")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Col_ScrollbarGrab()</functioncall>
        <functioncall prog_lang="python">int ImGui_Col_ScrollbarGrab()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Col_ScrollbarGrabActive</slug>
        <title>ImGui_Col_ScrollbarGrabActive</title>
        <functioncall prog_lang="cpp">int ImGui_Col_ScrollbarGrabActive()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Col_ScrollbarGrabActive")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Col_ScrollbarGrabActive()</functioncall>
        <functioncall prog_lang="python">int ImGui_Col_ScrollbarGrabActive()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Col_ScrollbarGrabHovered</slug>
        <title>ImGui_Col_ScrollbarGrabHovered</title>
        <functioncall prog_lang="cpp">int ImGui_Col_ScrollbarGrabHovered()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Col_ScrollbarGrabHovered")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Col_ScrollbarGrabHovered()</functioncall>
        <functioncall prog_lang="python">int ImGui_Col_ScrollbarGrabHovered()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Col_Separator</slug>
        <title>ImGui_Col_Separator</title>
        <functioncall prog_lang="cpp">int ImGui_Col_Separator()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Col_Separator")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Col_Separator()</functioncall>
        <functioncall prog_lang="python">int ImGui_Col_Separator()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Col_SeparatorActive</slug>
        <title>ImGui_Col_SeparatorActive</title>
        <functioncall prog_lang="cpp">int ImGui_Col_SeparatorActive()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Col_SeparatorActive")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Col_SeparatorActive()</functioncall>
        <functioncall prog_lang="python">int ImGui_Col_SeparatorActive()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Col_SeparatorHovered</slug>
        <title>ImGui_Col_SeparatorHovered</title>
        <functioncall prog_lang="cpp">int ImGui_Col_SeparatorHovered()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Col_SeparatorHovered")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Col_SeparatorHovered()</functioncall>
        <functioncall prog_lang="python">int ImGui_Col_SeparatorHovered()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Col_SliderGrab</slug>
        <title>ImGui_Col_SliderGrab</title>
        <functioncall prog_lang="cpp">int ImGui_Col_SliderGrab()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Col_SliderGrab")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Col_SliderGrab()</functioncall>
        <functioncall prog_lang="python">int ImGui_Col_SliderGrab()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Col_SliderGrabActive</slug>
        <title>ImGui_Col_SliderGrabActive</title>
        <functioncall prog_lang="cpp">int ImGui_Col_SliderGrabActive()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Col_SliderGrabActive")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Col_SliderGrabActive()</functioncall>
        <functioncall prog_lang="python">int ImGui_Col_SliderGrabActive()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Col_Tab</slug>
        <title>ImGui_Col_Tab</title>
        <functioncall prog_lang="cpp">int ImGui_Col_Tab()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Col_Tab")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Col_Tab()</functioncall>
        <functioncall prog_lang="python">int ImGui_Col_Tab()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Col_TabActive</slug>
        <title>ImGui_Col_TabActive</title>
        <functioncall prog_lang="cpp">int ImGui_Col_TabActive()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Col_TabActive")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Col_TabActive()</functioncall>
        <functioncall prog_lang="python">int ImGui_Col_TabActive()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Col_TabHovered</slug>
        <title>ImGui_Col_TabHovered</title>
        <functioncall prog_lang="cpp">int ImGui_Col_TabHovered()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Col_TabHovered")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Col_TabHovered()</functioncall>
        <functioncall prog_lang="python">int ImGui_Col_TabHovered()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Col_TabUnfocused</slug>
        <title>ImGui_Col_TabUnfocused</title>
        <functioncall prog_lang="cpp">int ImGui_Col_TabUnfocused()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Col_TabUnfocused")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Col_TabUnfocused()</functioncall>
        <functioncall prog_lang="python">int ImGui_Col_TabUnfocused()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Col_TabUnfocusedActive</slug>
        <title>ImGui_Col_TabUnfocusedActive</title>
        <functioncall prog_lang="cpp">int ImGui_Col_TabUnfocusedActive()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Col_TabUnfocusedActive")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Col_TabUnfocusedActive()</functioncall>
        <functioncall prog_lang="python">int ImGui_Col_TabUnfocusedActive()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Col_TableBorderLight</slug>
        <title>ImGui_Col_TableBorderLight</title>
        <functioncall prog_lang="cpp">int ImGui_Col_TableBorderLight()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Col_TableBorderLight")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Col_TableBorderLight()</functioncall>
        <functioncall prog_lang="python">int ImGui_Col_TableBorderLight()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Table inner borders (prefer using Alpha=1.0 here)
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Col_TableBorderStrong</slug>
        <title>ImGui_Col_TableBorderStrong</title>
        <functioncall prog_lang="cpp">int ImGui_Col_TableBorderStrong()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Col_TableBorderStrong")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Col_TableBorderStrong()</functioncall>
        <functioncall prog_lang="python">int ImGui_Col_TableBorderStrong()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Table outer and header borders (prefer using Alpha=1.0 here)
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Col_TableHeaderBg</slug>
        <title>ImGui_Col_TableHeaderBg</title>
        <functioncall prog_lang="cpp">int ImGui_Col_TableHeaderBg()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Col_TableHeaderBg")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Col_TableHeaderBg()</functioncall>
        <functioncall prog_lang="python">int ImGui_Col_TableHeaderBg()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Table header background
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Col_TableRowBg</slug>
        <title>ImGui_Col_TableRowBg</title>
        <functioncall prog_lang="cpp">int ImGui_Col_TableRowBg()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Col_TableRowBg")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Col_TableRowBg()</functioncall>
        <functioncall prog_lang="python">int ImGui_Col_TableRowBg()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Table row background (even rows)
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Col_TableRowBgAlt</slug>
        <title>ImGui_Col_TableRowBgAlt</title>
        <functioncall prog_lang="cpp">int ImGui_Col_TableRowBgAlt()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Col_TableRowBgAlt")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Col_TableRowBgAlt()</functioncall>
        <functioncall prog_lang="python">int ImGui_Col_TableRowBgAlt()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Table row background (odd rows)
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Col_Text</slug>
        <title>ImGui_Col_Text</title>
        <functioncall prog_lang="cpp">int ImGui_Col_Text()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Col_Text")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Col_Text()</functioncall>
        <functioncall prog_lang="python">int ImGui_Col_Text()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Col_TextDisabled</slug>
        <title>ImGui_Col_TextDisabled</title>
        <functioncall prog_lang="cpp">int ImGui_Col_TextDisabled()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Col_TextDisabled")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Col_TextDisabled()</functioncall>
        <functioncall prog_lang="python">int ImGui_Col_TextDisabled()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Col_TextSelectedBg</slug>
        <title>ImGui_Col_TextSelectedBg</title>
        <functioncall prog_lang="cpp">int ImGui_Col_TextSelectedBg()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Col_TextSelectedBg")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Col_TextSelectedBg()</functioncall>
        <functioncall prog_lang="python">int ImGui_Col_TextSelectedBg()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Col_TitleBg</slug>
        <title>ImGui_Col_TitleBg</title>
        <functioncall prog_lang="cpp">int ImGui_Col_TitleBg()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Col_TitleBg")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Col_TitleBg()</functioncall>
        <functioncall prog_lang="python">int ImGui_Col_TitleBg()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Col_TitleBgActive</slug>
        <title>ImGui_Col_TitleBgActive</title>
        <functioncall prog_lang="cpp">int ImGui_Col_TitleBgActive()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Col_TitleBgActive")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Col_TitleBgActive()</functioncall>
        <functioncall prog_lang="python">int ImGui_Col_TitleBgActive()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Col_TitleBgCollapsed</slug>
        <title>ImGui_Col_TitleBgCollapsed</title>
        <functioncall prog_lang="cpp">int ImGui_Col_TitleBgCollapsed()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Col_TitleBgCollapsed")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Col_TitleBgCollapsed()</functioncall>
        <functioncall prog_lang="python">int ImGui_Col_TitleBgCollapsed()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Col_WindowBg</slug>
        <title>ImGui_Col_WindowBg</title>
        <functioncall prog_lang="cpp">int ImGui_Col_WindowBg()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Col_WindowBg")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Col_WindowBg()</functioncall>
        <functioncall prog_lang="python">int ImGui_Col_WindowBg()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Background of normal windows
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_CollapsingHeader</slug>
        <title>ImGui_CollapsingHeader</title>
        <functioncall prog_lang="cpp">bool ImGui_CollapsingHeader(ImGui_Context* ctx, const char* label, bool* p_visibleInOptional, int* flagsInOptional)</functioncall>
        <functioncall prog_lang="eel">bool extension_api("ImGui_CollapsingHeader", ImGui_Context ctx, "label", optional bool p_visibleIn, optional int flagsIn)</functioncall>
        <functioncall prog_lang="lua">boolean reaper.ImGui_CollapsingHeader(ImGui_Context ctx, string label, optional boolean p_visibleIn, optional number flagsIn)</functioncall>
        <functioncall prog_lang="python">bool ImGui_CollapsingHeader(ImGui_Context* ctx, const char* label, bool* p_visibleInOptional, int* flagsInOptional)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            CollapsingHeader returns true when opened but do not indent nor push into the ID stack (because of the ImGui_TreeNodeFlags_NoTreePushOnOpen flag).
            
            This is basically the same as calling TreeNode(label, ImGui_TreeNodeFlags_CollapsingHeader). You can remove the _NoTreePushOnOpen flag if you want behavior closer to normal TreeNode().
            
            When 'visible' is provided: if 'true' display an additional small close button on upper right of the header which will set the bool to false when clicked, if 'false' don't display the header.
            
            Default values: flags = ImGui_TreeNodeFlags_None
        </description>        
        <retvals>
            boolean -
        </retvals>        
        <parameters>
            ImGui_Context ctx - 
            string label - 
            optional boolean p_visibleIn - 
            optional number flagsIn -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_ColorButton</slug>
        <title>ImGui_ColorButton</title>
        <functioncall prog_lang="cpp">bool ImGui_ColorButton(ImGui_Context* ctx, const char* desc_id, int col_rgba, int* flagsInOptional, double* size_wInOptional, double* size_hInOptional)</functioncall>
        <functioncall prog_lang="eel">bool extension_api("ImGui_ColorButton", ImGui_Context ctx, "desc_id", int col_rgba, optional int flagsIn, optional size_wIn, optional size_hIn)</functioncall>
        <functioncall prog_lang="lua">boolean reaper.ImGui_ColorButton(ImGui_Context ctx, string desc_id, integer col_rgba, optional number flagsIn, optional number size_wIn, optional number size_hIn)</functioncall>
        <functioncall prog_lang="python">bool ImGui_ColorButton(ImGui_Context* ctx, const char* desc_id, int col_rgba, int* flagsInOptional, double* size_wInOptional, double* size_hInOptional)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Display a color square/button, hover for details, return true when pressed.
            
            Default values: flags = ImGui_ColorEditFlags_None, size_w = 0.0, size_h = 0.0
        </description>        
        <retvals>
            boolean -
        </retvals>        
        <parameters>
            ImGui_Context ctx - 
            string desc_id - 
            integer col_rgba - 
            optional number flagsIn - 
            optional number size_wIn - 
            optional number size_hIn -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_ColorConvertHSVtoRGB</slug>
        <title>ImGui_ColorConvertHSVtoRGB</title>
        <functioncall prog_lang="cpp">int ImGui_ColorConvertHSVtoRGB(double h, double s, double v, double* alphaInOptional, double* rOut, double* gOut, double* bOut)</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_ColorConvertHSVtoRGB", h, s, v, optional alphaIn, &amp;r, &amp;g, &amp;b)</functioncall>
        <functioncall prog_lang="lua">integer retval, number r, number g, number b = reaper.ImGui_ColorConvertHSVtoRGB(number h, number s, number v, optional number alphaIn)</functioncall>
        <functioncall prog_lang="python">int ImGui_ColorConvertHSVtoRGB(double h, double s, double v, double* alphaInOptional, double* rOut, double* gOut, double* bOut)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Return 0x00RRGGBB or, if alpha is provided, 0xRRGGBBAA.
            
            Default values: alpha = nil
        </description>        
        <retvals>
            integer retval - 
            number r - 
            number g - 
            number b - -
        </retvals>        
        <parameters>
            number h - 
            number s - 
            number v - 
            optional number alphaIn -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_ColorConvertNative</slug>
        <title>ImGui_ColorConvertNative</title>
        <functioncall prog_lang="cpp">int ImGui_ColorConvertNative(int rgb)</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_ColorConvertNative", int rgb)</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_ColorConvertNative(integer rgb)</functioncall>
        <functioncall prog_lang="python">int ImGui_ColorConvertNative(int rgb)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Convert native colors coming from REAPER. This swaps the red and blue channels of the specified 0xRRGGBB color on Windows.
        </description>        
        <retvals>
            integer -
        </retvals>        
        <parameters>
            integer rgb -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_ColorConvertRGBtoHSV</slug>
        <title>ImGui_ColorConvertRGBtoHSV</title>
        <functioncall prog_lang="cpp">int ImGui_ColorConvertRGBtoHSV(double r, double g, double b, double* alphaInOptional, double* hOut, double* sOut, double* vOut)</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_ColorConvertRGBtoHSV", r, g, b, optional alphaIn, &amp;h, &amp;s, &amp;v)</functioncall>
        <functioncall prog_lang="lua">integer retval, number h, number s, number v = reaper.ImGui_ColorConvertRGBtoHSV(number r, number g, number b, optional number alphaIn)</functioncall>
        <functioncall prog_lang="python">int ImGui_ColorConvertRGBtoHSV(double r, double g, double b, double* alphaInOptional, double* hOut, double* sOut, double* vOut)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Return 0x00HHSSVV or, if alpha is provided, 0xHHSSVVAA.
            
            Default values: alpha = nil
        </description>        
        <retvals>
            integer retval - 
            number h - 
            number s - 
            number v - -
        </retvals>        
        <parameters>
            number r - 
            number g - 
            number b - 
            optional number alphaIn -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_ColorEdit3</slug>
        <title>ImGui_ColorEdit3</title>
        <functioncall prog_lang="cpp">bool ImGui_ColorEdit3(ImGui_Context* ctx, const char* label, int* col_rgbInOut, int* flagsInOptional)</functioncall>
        <functioncall prog_lang="eel">bool extension_api("ImGui_ColorEdit3", ImGui_Context ctx, "label", int &amp;col_rgb, optional int flagsIn)</functioncall>
        <functioncall prog_lang="lua">boolean retval, number col_rgb = reaper.ImGui_ColorEdit3(ImGui_Context ctx, string label, number col_rgb, optional number flagsIn)</functioncall>
        <functioncall prog_lang="python">bool ImGui_ColorEdit3(ImGui_Context* ctx, const char* label, int* col_rgbInOut, int* flagsInOptional)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Color is in 0xXXRRGGBB. XX is ignored and will not be modified.
            
            tip: the ColorEdit* functions have a little color square that can be left-clicked to open a picker, and right-clicked to open an option menu.
            
            Default values: flags = ImGui_ColorEditFlags_None
        </description>        
        <retvals>
            boolean retval - 
            number col_rgb - -
        </retvals>        
        <parameters>
            ImGui_Context ctx - 
            string label - 
            number col_rgb - 
            optional number flagsIn -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_ColorEdit4</slug>
        <title>ImGui_ColorEdit4</title>
        <functioncall prog_lang="cpp">bool ImGui_ColorEdit4(ImGui_Context* ctx, const char* label, int* col_rgbaInOut, int* flagsInOptional)</functioncall>
        <functioncall prog_lang="eel">bool extension_api("ImGui_ColorEdit4", ImGui_Context ctx, "label", int &amp;col_rgba, optional int flagsIn)</functioncall>
        <functioncall prog_lang="lua">boolean retval, number col_rgba = reaper.ImGui_ColorEdit4(ImGui_Context ctx, string label, number col_rgba, optional number flagsIn)</functioncall>
        <functioncall prog_lang="python">bool ImGui_ColorEdit4(ImGui_Context* ctx, const char* label, int* col_rgbaInOut, int* flagsInOptional)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Color is in 0xRRGGBBAA or, if ImGui_ColorEditFlags_NoAlpha is set, 0xXXRRGGBB (XX is ignored and will not be modified).
            
            tip: the ColorEdit* functions have a little color square that can be left-clicked to open a picker, and right-clicked to open an option menu.
            
            Default values: flags = ImGui_ColorEditFlags_None
        </description>        
        <retvals>
            boolean retval - 
            number col_rgba - -
        </retvals>        
        <parameters>
            ImGui_Context ctx - 
            string label - 
            number col_rgba - 
            optional number flagsIn -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_ColorEditFlags_AlphaBar</slug>
        <title>ImGui_ColorEditFlags_AlphaBar</title>
        <functioncall prog_lang="cpp">int ImGui_ColorEditFlags_AlphaBar()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_ColorEditFlags_AlphaBar")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_ColorEditFlags_AlphaBar()</functioncall>
        <functioncall prog_lang="python">int ImGui_ColorEditFlags_AlphaBar()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            ColorEdit, ColorPicker: show vertical alpha bar/gradient in picker.
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_ColorEditFlags_AlphaPreview</slug>
        <title>ImGui_ColorEditFlags_AlphaPreview</title>
        <functioncall prog_lang="cpp">int ImGui_ColorEditFlags_AlphaPreview()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_ColorEditFlags_AlphaPreview")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_ColorEditFlags_AlphaPreview()</functioncall>
        <functioncall prog_lang="python">int ImGui_ColorEditFlags_AlphaPreview()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            ColorEdit, ColorPicker, ColorButton: display preview as a transparent color over a checkerboard, instead of opaque.
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_ColorEditFlags_AlphaPreviewHalf</slug>
        <title>ImGui_ColorEditFlags_AlphaPreviewHalf</title>
        <functioncall prog_lang="cpp">int ImGui_ColorEditFlags_AlphaPreviewHalf()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_ColorEditFlags_AlphaPreviewHalf")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_ColorEditFlags_AlphaPreviewHalf()</functioncall>
        <functioncall prog_lang="python">int ImGui_ColorEditFlags_AlphaPreviewHalf()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            ColorEdit, ColorPicker, ColorButton: display half opaque / half checkerboard, instead of opaque.
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_ColorEditFlags_DisplayHSV</slug>
        <title>ImGui_ColorEditFlags_DisplayHSV</title>
        <functioncall prog_lang="cpp">int ImGui_ColorEditFlags_DisplayHSV()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_ColorEditFlags_DisplayHSV")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_ColorEditFlags_DisplayHSV()</functioncall>
        <functioncall prog_lang="python">int ImGui_ColorEditFlags_DisplayHSV()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            ColorEdit: override _display_ type to HSV. ColorPicker: select any combination using one or more of RGB/HSV/Hex.
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_ColorEditFlags_DisplayHex</slug>
        <title>ImGui_ColorEditFlags_DisplayHex</title>
        <functioncall prog_lang="cpp">int ImGui_ColorEditFlags_DisplayHex()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_ColorEditFlags_DisplayHex")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_ColorEditFlags_DisplayHex()</functioncall>
        <functioncall prog_lang="python">int ImGui_ColorEditFlags_DisplayHex()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            ColorEdit: override _display_ type to Hex. ColorPicker: select any combination using one or more of RGB/HSV/Hex.
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_ColorEditFlags_DisplayRGB</slug>
        <title>ImGui_ColorEditFlags_DisplayRGB</title>
        <functioncall prog_lang="cpp">int ImGui_ColorEditFlags_DisplayRGB()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_ColorEditFlags_DisplayRGB")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_ColorEditFlags_DisplayRGB()</functioncall>
        <functioncall prog_lang="python">int ImGui_ColorEditFlags_DisplayRGB()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            ColorEdit: override _display_ type to RGB. ColorPicker: select any combination using one or more of RGB/HSV/Hex.
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_ColorEditFlags_Float</slug>
        <title>ImGui_ColorEditFlags_Float</title>
        <functioncall prog_lang="cpp">int ImGui_ColorEditFlags_Float()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_ColorEditFlags_Float")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_ColorEditFlags_Float()</functioncall>
        <functioncall prog_lang="python">int ImGui_ColorEditFlags_Float()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            ColorEdit, ColorPicker, ColorButton: _display_ values formatted as 0.0f..1.0f floats instead of 0..255 integers. No round-trip of value via integers.
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_ColorEditFlags_InputHSV</slug>
        <title>ImGui_ColorEditFlags_InputHSV</title>
        <functioncall prog_lang="cpp">int ImGui_ColorEditFlags_InputHSV()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_ColorEditFlags_InputHSV")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_ColorEditFlags_InputHSV()</functioncall>
        <functioncall prog_lang="python">int ImGui_ColorEditFlags_InputHSV()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            ColorEdit, ColorPicker: input and output data in HSV format.
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_ColorEditFlags_InputRGB</slug>
        <title>ImGui_ColorEditFlags_InputRGB</title>
        <functioncall prog_lang="cpp">int ImGui_ColorEditFlags_InputRGB()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_ColorEditFlags_InputRGB")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_ColorEditFlags_InputRGB()</functioncall>
        <functioncall prog_lang="python">int ImGui_ColorEditFlags_InputRGB()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            ColorEdit, ColorPicker: input and output data in RGB format.
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_ColorEditFlags_NoAlpha</slug>
        <title>ImGui_ColorEditFlags_NoAlpha</title>
        <functioncall prog_lang="cpp">int ImGui_ColorEditFlags_NoAlpha()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_ColorEditFlags_NoAlpha")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_ColorEditFlags_NoAlpha()</functioncall>
        <functioncall prog_lang="python">int ImGui_ColorEditFlags_NoAlpha()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            ColorEdit, ColorPicker, ColorButton: ignore Alpha component (will only read 3 components from the input pointer).
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_ColorEditFlags_NoBorder</slug>
        <title>ImGui_ColorEditFlags_NoBorder</title>
        <functioncall prog_lang="cpp">int ImGui_ColorEditFlags_NoBorder()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_ColorEditFlags_NoBorder")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_ColorEditFlags_NoBorder()</functioncall>
        <functioncall prog_lang="python">int ImGui_ColorEditFlags_NoBorder()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            ColorButton: disable border (which is enforced by default)
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_ColorEditFlags_NoDragDrop</slug>
        <title>ImGui_ColorEditFlags_NoDragDrop</title>
        <functioncall prog_lang="cpp">int ImGui_ColorEditFlags_NoDragDrop()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_ColorEditFlags_NoDragDrop")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_ColorEditFlags_NoDragDrop()</functioncall>
        <functioncall prog_lang="python">int ImGui_ColorEditFlags_NoDragDrop()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            ColorEdit: disable drag and drop target. ColorButton: disable drag and drop source.
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_ColorEditFlags_NoInputs</slug>
        <title>ImGui_ColorEditFlags_NoInputs</title>
        <functioncall prog_lang="cpp">int ImGui_ColorEditFlags_NoInputs()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_ColorEditFlags_NoInputs")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_ColorEditFlags_NoInputs()</functioncall>
        <functioncall prog_lang="python">int ImGui_ColorEditFlags_NoInputs()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            ColorEdit, ColorPicker: disable inputs sliders/text widgets (e.g. to show only the small preview color square).
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_ColorEditFlags_NoLabel</slug>
        <title>ImGui_ColorEditFlags_NoLabel</title>
        <functioncall prog_lang="cpp">int ImGui_ColorEditFlags_NoLabel()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_ColorEditFlags_NoLabel")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_ColorEditFlags_NoLabel()</functioncall>
        <functioncall prog_lang="python">int ImGui_ColorEditFlags_NoLabel()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            ColorEdit, ColorPicker: disable display of inline text label (the label is still forwarded to the tooltip and picker).
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_ColorEditFlags_NoOptions</slug>
        <title>ImGui_ColorEditFlags_NoOptions</title>
        <functioncall prog_lang="cpp">int ImGui_ColorEditFlags_NoOptions()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_ColorEditFlags_NoOptions")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_ColorEditFlags_NoOptions()</functioncall>
        <functioncall prog_lang="python">int ImGui_ColorEditFlags_NoOptions()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            ColorEdit: disable toggling options menu when right-clicking on inputs/small preview.
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_ColorEditFlags_NoPicker</slug>
        <title>ImGui_ColorEditFlags_NoPicker</title>
        <functioncall prog_lang="cpp">int ImGui_ColorEditFlags_NoPicker()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_ColorEditFlags_NoPicker")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_ColorEditFlags_NoPicker()</functioncall>
        <functioncall prog_lang="python">int ImGui_ColorEditFlags_NoPicker()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            ColorEdit: disable picker when clicking on color square.
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_ColorEditFlags_NoSidePreview</slug>
        <title>ImGui_ColorEditFlags_NoSidePreview</title>
        <functioncall prog_lang="cpp">int ImGui_ColorEditFlags_NoSidePreview()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_ColorEditFlags_NoSidePreview")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_ColorEditFlags_NoSidePreview()</functioncall>
        <functioncall prog_lang="python">int ImGui_ColorEditFlags_NoSidePreview()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            ColorPicker: disable bigger color preview on right side of the picker, use small color square preview instead.
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_ColorEditFlags_NoSmallPreview</slug>
        <title>ImGui_ColorEditFlags_NoSmallPreview</title>
        <functioncall prog_lang="cpp">int ImGui_ColorEditFlags_NoSmallPreview()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_ColorEditFlags_NoSmallPreview")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_ColorEditFlags_NoSmallPreview()</functioncall>
        <functioncall prog_lang="python">int ImGui_ColorEditFlags_NoSmallPreview()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            ColorEdit, ColorPicker: disable color square preview next to the inputs. (e.g. to show only the inputs)
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_ColorEditFlags_NoTooltip</slug>
        <title>ImGui_ColorEditFlags_NoTooltip</title>
        <functioncall prog_lang="cpp">int ImGui_ColorEditFlags_NoTooltip()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_ColorEditFlags_NoTooltip")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_ColorEditFlags_NoTooltip()</functioncall>
        <functioncall prog_lang="python">int ImGui_ColorEditFlags_NoTooltip()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            ColorEdit, ColorPicker, ColorButton: disable tooltip when hovering the preview.
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_ColorEditFlags_None</slug>
        <title>ImGui_ColorEditFlags_None</title>
        <functioncall prog_lang="cpp">int ImGui_ColorEditFlags_None()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_ColorEditFlags_None")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_ColorEditFlags_None()</functioncall>
        <functioncall prog_lang="python">int ImGui_ColorEditFlags_None()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Flags for ColorEdit3() / ColorEdit4() / ColorPicker3() / ColorPicker4() / ColorButton()
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_ColorEditFlags_PickerHueBar</slug>
        <title>ImGui_ColorEditFlags_PickerHueBar</title>
        <functioncall prog_lang="cpp">int ImGui_ColorEditFlags_PickerHueBar()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_ColorEditFlags_PickerHueBar")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_ColorEditFlags_PickerHueBar()</functioncall>
        <functioncall prog_lang="python">int ImGui_ColorEditFlags_PickerHueBar()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            ColorPicker: bar for Hue, rectangle for Sat/Value.
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_ColorEditFlags_PickerHueWheel</slug>
        <title>ImGui_ColorEditFlags_PickerHueWheel</title>
        <functioncall prog_lang="cpp">int ImGui_ColorEditFlags_PickerHueWheel()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_ColorEditFlags_PickerHueWheel")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_ColorEditFlags_PickerHueWheel()</functioncall>
        <functioncall prog_lang="python">int ImGui_ColorEditFlags_PickerHueWheel()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            ColorPicker: wheel for Hue, triangle for Sat/Value.
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_ColorEditFlags_Uint8</slug>
        <title>ImGui_ColorEditFlags_Uint8</title>
        <functioncall prog_lang="cpp">int ImGui_ColorEditFlags_Uint8()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_ColorEditFlags_Uint8")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_ColorEditFlags_Uint8()</functioncall>
        <functioncall prog_lang="python">int ImGui_ColorEditFlags_Uint8()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            ColorEdit, ColorPicker, ColorButton: _display_ values formatted as 0..255.
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_ColorEditFlags__OptionsDefault</slug>
        <title>ImGui_ColorEditFlags__OptionsDefault</title>
        <functioncall prog_lang="cpp">int ImGui_ColorEditFlags__OptionsDefault()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_ColorEditFlags__OptionsDefault")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_ColorEditFlags__OptionsDefault()</functioncall>
        <functioncall prog_lang="python">int ImGui_ColorEditFlags__OptionsDefault()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Defaults Options. You can set application defaults using SetColorEditOptions(). The intent is that you probably don't want to override them in most of your calls. Let the user choose via the option menu and/or call SetColorEditOptions() once during startup.
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_ColorPicker3</slug>
        <title>ImGui_ColorPicker3</title>
        <functioncall prog_lang="cpp">bool ImGui_ColorPicker3(ImGui_Context* ctx, const char* label, int* col_rgbInOut, int* flagsInOptional)</functioncall>
        <functioncall prog_lang="eel">bool extension_api("ImGui_ColorPicker3", ImGui_Context ctx, "label", int &amp;col_rgb, optional int flagsIn)</functioncall>
        <functioncall prog_lang="lua">boolean retval, number col_rgb = reaper.ImGui_ColorPicker3(ImGui_Context ctx, string label, number col_rgb, optional number flagsIn)</functioncall>
        <functioncall prog_lang="python">bool ImGui_ColorPicker3(ImGui_Context* ctx, const char* label, int* col_rgbInOut, int* flagsInOptional)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Color is in 0xXXRRGGBB. XX is ignored and will not be modified.
            
            Default values: flags = ImGui_ColorEditFlags_None
        </description>        
        <retvals>
            boolean retval - 
            number col_rgb - -
        </retvals>        
        <parameters>
            ImGui_Context ctx - 
            string label - 
            number col_rgb - 
            optional number flagsIn -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_ColorPicker4</slug>
        <title>ImGui_ColorPicker4</title>
        <functioncall prog_lang="cpp">bool ImGui_ColorPicker4(ImGui_Context* ctx, const char* label, int* col_rgbaInOut, int* flagsInOptional, int* ref_colInOptional)</functioncall>
        <functioncall prog_lang="eel">bool extension_api("ImGui_ColorPicker4", ImGui_Context ctx, "label", int &amp;col_rgba, optional int flagsIn, optional int ref_colIn)</functioncall>
        <functioncall prog_lang="lua">boolean retval, number col_rgba = reaper.ImGui_ColorPicker4(ImGui_Context ctx, string label, number col_rgba, optional number flagsIn, optional number ref_colIn)</functioncall>
        <functioncall prog_lang="python">bool ImGui_ColorPicker4(ImGui_Context* ctx, const char* label, int* col_rgbaInOut, int* flagsInOptional, int* ref_colInOptional)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Default values: flags = ImGui_ColorEditFlags_None, ref_col = nil
        </description>        
        <retvals>
            boolean retval - 
            number col_rgba - -
        </retvals>        
        <parameters>
            ImGui_Context ctx - 
            string label - 
            number col_rgba - 
            optional number flagsIn - 
            optional number ref_colIn -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Combo</slug>
        <title>ImGui_Combo</title>
        <functioncall prog_lang="cpp">bool ImGui_Combo(ImGui_Context* ctx, const char* label, int* current_itemInOut, char* items, int* popup_max_height_in_itemsInOptional)</functioncall>
        <functioncall prog_lang="eel">bool extension_api("ImGui_Combo", ImGui_Context ctx, "label", int &amp;current_item, #items, optional int popup_max_height_in_itemsIn)</functioncall>
        <functioncall prog_lang="lua">boolean retval, number current_item, string items = reaper.ImGui_Combo(ImGui_Context ctx, string label, number current_item, string items, optional number popup_max_height_in_itemsIn)</functioncall>
        <functioncall prog_lang="python">bool ImGui_Combo(ImGui_Context* ctx, const char* label, int* current_itemInOut, char* items, int* popup_max_height_in_itemsInOptional)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Helper over BeginCombo()/EndCombo() for convenience purpose. Use \31 (ASCII Unit Separator) to separate items within the string and to terminate it.
            
            Default values: popup_max_height_in_items = -1
        </description>        
        <retvals>
            boolean retval - 
            number current_item - 
            string items - -
        </retvals>        
        <parameters>
            ImGui_Context ctx - 
            string label - 
            number current_item - 
            string items - 
            optional number popup_max_height_in_itemsIn -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_ComboFlags_HeightLarge</slug>
        <title>ImGui_ComboFlags_HeightLarge</title>
        <functioncall prog_lang="cpp">int ImGui_ComboFlags_HeightLarge()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_ComboFlags_HeightLarge")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_ComboFlags_HeightLarge()</functioncall>
        <functioncall prog_lang="python">int ImGui_ComboFlags_HeightLarge()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Max ~20 items visible
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_ComboFlags_HeightLargest</slug>
        <title>ImGui_ComboFlags_HeightLargest</title>
        <functioncall prog_lang="cpp">int ImGui_ComboFlags_HeightLargest()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_ComboFlags_HeightLargest")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_ComboFlags_HeightLargest()</functioncall>
        <functioncall prog_lang="python">int ImGui_ComboFlags_HeightLargest()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            As many fitting items as possible
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_ComboFlags_HeightRegular</slug>
        <title>ImGui_ComboFlags_HeightRegular</title>
        <functioncall prog_lang="cpp">int ImGui_ComboFlags_HeightRegular()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_ComboFlags_HeightRegular")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_ComboFlags_HeightRegular()</functioncall>
        <functioncall prog_lang="python">int ImGui_ComboFlags_HeightRegular()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Max ~8 items visible (default)
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_ComboFlags_HeightSmall</slug>
        <title>ImGui_ComboFlags_HeightSmall</title>
        <functioncall prog_lang="cpp">int ImGui_ComboFlags_HeightSmall()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_ComboFlags_HeightSmall")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_ComboFlags_HeightSmall()</functioncall>
        <functioncall prog_lang="python">int ImGui_ComboFlags_HeightSmall()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Max ~4 items visible. Tip: If you want your combo popup to be a specific size you can use SetNextWindowSizeConstraints() prior to calling BeginCombo()
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_ComboFlags_NoArrowButton</slug>
        <title>ImGui_ComboFlags_NoArrowButton</title>
        <functioncall prog_lang="cpp">int ImGui_ComboFlags_NoArrowButton()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_ComboFlags_NoArrowButton")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_ComboFlags_NoArrowButton()</functioncall>
        <functioncall prog_lang="python">int ImGui_ComboFlags_NoArrowButton()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Display on the preview box without the square arrow button
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_ComboFlags_NoPreview</slug>
        <title>ImGui_ComboFlags_NoPreview</title>
        <functioncall prog_lang="cpp">int ImGui_ComboFlags_NoPreview()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_ComboFlags_NoPreview")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_ComboFlags_NoPreview()</functioncall>
        <functioncall prog_lang="python">int ImGui_ComboFlags_NoPreview()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Display only a square arrow button
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_ComboFlags_None</slug>
        <title>ImGui_ComboFlags_None</title>
        <functioncall prog_lang="cpp">int ImGui_ComboFlags_None()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_ComboFlags_None")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_ComboFlags_None()</functioncall>
        <functioncall prog_lang="python">int ImGui_ComboFlags_None()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Flags for ImGui::BeginCombo()
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_ComboFlags_PopupAlignLeft</slug>
        <title>ImGui_ComboFlags_PopupAlignLeft</title>
        <functioncall prog_lang="cpp">int ImGui_ComboFlags_PopupAlignLeft()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_ComboFlags_PopupAlignLeft")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_ComboFlags_PopupAlignLeft()</functioncall>
        <functioncall prog_lang="python">int ImGui_ComboFlags_PopupAlignLeft()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Align the popup toward the left by default
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Cond_Always</slug>
        <title>ImGui_Cond_Always</title>
        <functioncall prog_lang="cpp">int ImGui_Cond_Always()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Cond_Always")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Cond_Always()</functioncall>
        <functioncall prog_lang="python">int ImGui_Cond_Always()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            No condition (always set the variable)
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Cond_Appearing</slug>
        <title>ImGui_Cond_Appearing</title>
        <functioncall prog_lang="cpp">int ImGui_Cond_Appearing()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Cond_Appearing")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Cond_Appearing()</functioncall>
        <functioncall prog_lang="python">int ImGui_Cond_Appearing()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Set the variable if the object/window is appearing after being hidden/inactive (or the first time)
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Cond_FirstUseEver</slug>
        <title>ImGui_Cond_FirstUseEver</title>
        <functioncall prog_lang="cpp">int ImGui_Cond_FirstUseEver()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Cond_FirstUseEver")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Cond_FirstUseEver()</functioncall>
        <functioncall prog_lang="python">int ImGui_Cond_FirstUseEver()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Set the variable if the object/window has no persistently saved data (no entry in .ini file)
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Cond_Once</slug>
        <title>ImGui_Cond_Once</title>
        <functioncall prog_lang="cpp">int ImGui_Cond_Once()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Cond_Once")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Cond_Once()</functioncall>
        <functioncall prog_lang="python">int ImGui_Cond_Once()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Set the variable once per runtime session (only the first call will succeed)
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_ConfigFlags_NavEnableKeyboard</slug>
        <title>ImGui_ConfigFlags_NavEnableKeyboard</title>
        <functioncall prog_lang="cpp">int ImGui_ConfigFlags_NavEnableKeyboard()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_ConfigFlags_NavEnableKeyboard")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_ConfigFlags_NavEnableKeyboard()</functioncall>
        <functioncall prog_lang="python">int ImGui_ConfigFlags_NavEnableKeyboard()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Master keyboard navigation enable flag.
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_ConfigFlags_NavEnableSetMousePos</slug>
        <title>ImGui_ConfigFlags_NavEnableSetMousePos</title>
        <functioncall prog_lang="cpp">int ImGui_ConfigFlags_NavEnableSetMousePos()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_ConfigFlags_NavEnableSetMousePos")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_ConfigFlags_NavEnableSetMousePos()</functioncall>
        <functioncall prog_lang="python">int ImGui_ConfigFlags_NavEnableSetMousePos()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Instruct navigation to move the mouse cursor.
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_ConfigFlags_NoMouse</slug>
        <title>ImGui_ConfigFlags_NoMouse</title>
        <functioncall prog_lang="cpp">int ImGui_ConfigFlags_NoMouse()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_ConfigFlags_NoMouse")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_ConfigFlags_NoMouse()</functioncall>
        <functioncall prog_lang="python">int ImGui_ConfigFlags_NoMouse()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Instruct imgui to clear mouse position/buttons in NewFrame(). This allows ignoring the mouse information set by the backend.
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_ConfigFlags_NoMouseCursorChange</slug>
        <title>ImGui_ConfigFlags_NoMouseCursorChange</title>
        <functioncall prog_lang="cpp">int ImGui_ConfigFlags_NoMouseCursorChange()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_ConfigFlags_NoMouseCursorChange")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_ConfigFlags_NoMouseCursorChange()</functioncall>
        <functioncall prog_lang="python">int ImGui_ConfigFlags_NoMouseCursorChange()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Instruct backend to not alter mouse cursor shape and visibility.
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_ConfigFlags_NoRestoreSize</slug>
        <title>ImGui_ConfigFlags_NoRestoreSize</title>
        <functioncall prog_lang="cpp">int ImGui_ConfigFlags_NoRestoreSize()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_ConfigFlags_NoRestoreSize")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_ConfigFlags_NoRestoreSize()</functioncall>
        <functioncall prog_lang="python">int ImGui_ConfigFlags_NoRestoreSize()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Disable restoration of the previous context size
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_ConfigFlags_NoSavedSettings</slug>
        <title>ImGui_ConfigFlags_NoSavedSettings</title>
        <functioncall prog_lang="cpp">int ImGui_ConfigFlags_NoSavedSettings()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_ConfigFlags_NoSavedSettings")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_ConfigFlags_NoSavedSettings()</functioncall>
        <functioncall prog_lang="python">int ImGui_ConfigFlags_NoSavedSettings()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Disable state restoration and persistence for the whole context
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_ConfigFlags_None</slug>
        <title>ImGui_ConfigFlags_None</title>
        <functioncall prog_lang="cpp">int ImGui_ConfigFlags_None()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_ConfigFlags_None")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_ConfigFlags_None()</functioncall>
        <functioncall prog_lang="python">int ImGui_ConfigFlags_None()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Flags for ImGui_SetConfigFlags
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_CreateContext</slug>
        <title>ImGui_CreateContext</title>
        <functioncall prog_lang="cpp">ImGui_Context* ImGui_CreateContext(const char* name, int size_w, int size_h, int* pos_xInOptional, int* pos_yInOptional, int* dockInOptional, int* config_flagsInOptional)</functioncall>
        <functioncall prog_lang="eel">ImGui_Context extension_api("ImGui_CreateContext", "name", int size_w, int size_h, optional int pos_xIn, optional int pos_yIn, optional int dockIn, optional int config_flagsIn)</functioncall>
        <functioncall prog_lang="lua">ImGui_Context reaper.ImGui_CreateContext(string name, integer size_w, integer size_h, optional number pos_xIn, optional number pos_yIn, optional number dockIn, optional number config_flagsIn)</functioncall>
        <functioncall prog_lang="python">ImGui_Context* ImGui_CreateContext(const char* name, int size_w, int size_h, int* pos_xInOptional, int* pos_yInOptional, int* dockInOptional, int* config_flagsInOptional)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Create a new ReaImGui context. It will remain valid as long as it is used in each defer cycle. Pass null x/y coordinates to auto-position the window with the arrange view.
            
            The position, size and dock status are automatically saved and restored (unless the ImGui_ConfigFlags_NoSavedSettings flag is set).
            
            Default values: pos_x = 0x80000000, pos_y = 0x80000000, dock = 0, config_flags = ImGui_ConfigFlags_None
        </description>        
        <retvals>
            ImGui_Context -
        </retvals>        
        <parameters>
            string name - 
            integer size_w - 
            integer size_h - 
            optional number pos_xIn - 
            optional number pos_yIn - 
            optional number dockIn - 
            optional number config_flagsIn -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_CreateFont</slug>
        <title>ImGui_CreateFont</title>
        <functioncall prog_lang="cpp">ImGui_Font* ImGui_CreateFont(const char* family_or_file, int size, int* flagsInOptional)</functioncall>
        <functioncall prog_lang="eel">ImGui_Font extension_api("ImGui_CreateFont", "family_or_file", int size, optional int flagsIn)</functioncall>
        <functioncall prog_lang="lua">ImGui_Font reaper.ImGui_CreateFont(string family_or_file, integer size, optional number flagsIn)</functioncall>
        <functioncall prog_lang="python">ImGui_Font* ImGui_CreateFont(const char* family_or_file, int size, int* flagsInOptional)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Load a font matching a font family name or from a font file. The font will remain valid while it's attached to a context. See <a href="#ImGui_AttachFont">ImGui_AttachFont</a>.
            
            The family name can be an installed font or one of the generic fonts: sans-serif, serif, monospace, cursive, fantasy.
            
            If 'family_or_file' specifies a filename:
            - The first byte of 'flags' is used as the font index within the file
            - The font styles in 'flags' are simulated by the font renderer
            
            Default values: flags = ImGui_FontFlags_None
        </description>        
        <retvals>
            ImGui_Font -
        </retvals>        
        <parameters>
            string family_or_file - 
            integer size - 
            optional number flagsIn -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_CreateListClipper</slug>
        <title>ImGui_CreateListClipper</title>
        <functioncall prog_lang="cpp">ImGui_ListClipper* ImGui_CreateListClipper(ImGui_Context* ctx)</functioncall>
        <functioncall prog_lang="eel">ImGui_ListClipper extension_api("ImGui_CreateListClipper", ImGui_Context ctx)</functioncall>
        <functioncall prog_lang="lua">ImGui_ListClipper reaper.ImGui_CreateListClipper(ImGui_Context ctx)</functioncall>
        <functioncall prog_lang="python">ImGui_ListClipper* ImGui_CreateListClipper(ImGui_Context* ctx)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Helper: Manually clip large list of items.
            If you are submitting lots of evenly spaced items and you have a random access to the list, you can perform coarse
            clipping based on visibility to save yourself from processing those items at all.
            The clipper calculates the range of visible items and advance the cursor to compensate for the non-visible items we have skipped.
            (Dear ImGui already clip items based on their bounds but it needs to measure text size to do so, whereas manual coarse clipping before submission makes this cost and your own data fetching/submission cost almost null)
            
            Usage:
            Â Â local clipper = reaper.ImGui_CreateListClipper(ctx)
            Â Â reaper.ImGui_ListClipper_Begin(clipper, 1000) -- We have 1000 elements, evenly spaced
            Â Â while reaper.ImGui_ListClipper_Step(clipper) do
            Â Â Â Â local display_start, display_end = reaper.ImGui_ListClipper_GetDisplayRange(clipper)
            Â Â Â Â for row = display_start, display_end - 1 do
            Â Â Â Â Â Â reaper.ImGui_Text(ctx, ("line number %d"):format(i))
            Â Â Â Â end
            
            Generally what happens is:
            - Clipper lets you process the first element (DisplayStart = 0, DisplayEnd = 1) regardless of it being visible or not.
            - User code submit one element.
            - Clipper can measure the height of the first element
            - Clipper calculate the actual range of elements to display based on the current clipping rectangle, position the cursor before the first visible element.
            - User code submit visible elements.
            
            The returned clipper object is tied to the context and is valid as long as it is used in each defer cycle. See <a href="#ImGui_ListClipper_Begin">ImGui_ListClipper_Begin</a>.
        </description>        
        <retvals>
            ImGui_ListClipper -
        </retvals>        
        <parameters>
            ImGui_Context ctx -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_DestroyContext</slug>
        <title>ImGui_DestroyContext</title>
        <functioncall prog_lang="cpp">void ImGui_DestroyContext(ImGui_Context* ctx)</functioncall>
        <functioncall prog_lang="eel">extension_api("ImGui_DestroyContext", ImGui_Context ctx)</functioncall>
        <functioncall prog_lang="lua">reaper.ImGui_DestroyContext(ImGui_Context ctx)</functioncall>
        <functioncall prog_lang="python">void ImGui_DestroyContext(ImGui_Context* ctx)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Close and free the resources used by a context.
        </description>        
        <parameters>
            ImGui_Context ctx -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Dir_Down</slug>
        <title>ImGui_Dir_Down</title>
        <functioncall prog_lang="cpp">int ImGui_Dir_Down()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Dir_Down")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Dir_Down()</functioncall>
        <functioncall prog_lang="python">int ImGui_Dir_Down()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            A cardinal direction
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Dir_Left</slug>
        <title>ImGui_Dir_Left</title>
        <functioncall prog_lang="cpp">int ImGui_Dir_Left()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Dir_Left")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Dir_Left()</functioncall>
        <functioncall prog_lang="python">int ImGui_Dir_Left()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            A cardinal direction
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Dir_None</slug>
        <title>ImGui_Dir_None</title>
        <functioncall prog_lang="cpp">int ImGui_Dir_None()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Dir_None")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Dir_None()</functioncall>
        <functioncall prog_lang="python">int ImGui_Dir_None()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            A cardinal direction
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Dir_Right</slug>
        <title>ImGui_Dir_Right</title>
        <functioncall prog_lang="cpp">int ImGui_Dir_Right()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Dir_Right")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Dir_Right()</functioncall>
        <functioncall prog_lang="python">int ImGui_Dir_Right()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            A cardinal direction
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_Dir_Up</slug>
        <title>ImGui_Dir_Up</title>
        <functioncall prog_lang="cpp">int ImGui_Dir_Up()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_Dir_Up")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_Dir_Up()</functioncall>
        <functioncall prog_lang="python">int ImGui_Dir_Up()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            A cardinal direction
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_DragDouble</slug>
        <title>ImGui_DragDouble</title>
        <functioncall prog_lang="cpp">bool ImGui_DragDouble(ImGui_Context* ctx, const char* label, double* vInOut, double* v_speedInOptional, double* v_minInOptional, double* v_maxInOptional, const char* formatInOptional, int* flagsInOptional)</functioncall>
        <functioncall prog_lang="eel">bool extension_api("ImGui_DragDouble", ImGui_Context ctx, "label", &amp;v, optional v_speedIn, optional v_minIn, optional v_maxIn, optional "formatIn", optional int flagsIn)</functioncall>
        <functioncall prog_lang="lua">boolean retval, number v = reaper.ImGui_DragDouble(ImGui_Context ctx, string label, number v, optional number v_speedIn, optional number v_minIn, optional number v_maxIn, optional string formatIn, optional number flagsIn)</functioncall>
        <functioncall prog_lang="python">bool ImGui_DragDouble(ImGui_Context* ctx, const char* label, double* vInOut, double* v_speedInOptional, double* v_minInOptional, double* v_maxInOptional, const char* formatInOptional, int* flagsInOptional)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Default values: v_speed = 1.0, v_min = 0.0, v_max = 0.0, format = '%.3f', flags = ImGui_SliderFlags_None
        </description>        
        <retvals>
            boolean retval - 
            number v - -
        </retvals>        
        <parameters>
            ImGui_Context ctx - 
            string label - 
            number v - 
            optional number v_speedIn - 
            optional number v_minIn - 
            optional number v_maxIn - 
            optional string formatIn - 
            optional number flagsIn -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_DragDouble2</slug>
        <title>ImGui_DragDouble2</title>
        <functioncall prog_lang="cpp">bool ImGui_DragDouble2(ImGui_Context* ctx, const char* label, double* v1InOut, double* v2InOut, double* v_speedInOptional, double* v_minInOptional, double* v_maxInOptional, const char* formatInOptional, int* flagsInOptional)</functioncall>
        <functioncall prog_lang="eel">bool extension_api("ImGui_DragDouble2", ImGui_Context ctx, "label", &amp;v1, &amp;v2, optional v_speedIn, optional v_minIn, optional v_maxIn, optional "formatIn", optional int flagsIn)</functioncall>
        <functioncall prog_lang="lua">boolean retval, number v1, number v2 = reaper.ImGui_DragDouble2(ImGui_Context ctx, string label, number v1, number v2, optional number v_speedIn, optional number v_minIn, optional number v_maxIn, optional string formatIn, optional number flagsIn)</functioncall>
        <functioncall prog_lang="python">bool ImGui_DragDouble2(ImGui_Context* ctx, const char* label, double* v1InOut, double* v2InOut, double* v_speedInOptional, double* v_minInOptional, double* v_maxInOptional, const char* formatInOptional, int* flagsInOptional)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Default values: v_speed = 1.0, v_min = 0.0, v_max = 0.0, format = '%.3f', flags = ImGui_SliderFlags_None
        </description>        
        <retvals>
            boolean retval - 
            number v1 - 
            number v2 - -
        </retvals>        
        <parameters>
            ImGui_Context ctx - 
            string label - 
            number v1 - 
            number v2 - 
            optional number v_speedIn - 
            optional number v_minIn - 
            optional number v_maxIn - 
            optional string formatIn - 
            optional number flagsIn -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_DragDouble3</slug>
        <title>ImGui_DragDouble3</title>
        <functioncall prog_lang="cpp">bool ImGui_DragDouble3(ImGui_Context* ctx, const char* label, double* v1InOut, double* v2InOut, double* v3InOut, double* v_speedInOptional, double* v_minInOptional, double* v_maxInOptional, const char* formatInOptional, int* flagsInOptional)</functioncall>
        <functioncall prog_lang="eel">bool extension_api("ImGui_DragDouble3", ImGui_Context ctx, "label", &amp;v1, &amp;v2, &amp;v3, optional v_speedIn, optional v_minIn, optional v_maxIn, optional "formatIn", optional int flagsIn)</functioncall>
        <functioncall prog_lang="lua">boolean retval, number v1, number v2, number v3 = reaper.ImGui_DragDouble3(ImGui_Context ctx, string label, number v1, number v2, number v3, optional number v_speedIn, optional number v_minIn, optional number v_maxIn, optional string formatIn, optional number flagsIn)</functioncall>
        <functioncall prog_lang="python">bool ImGui_DragDouble3(ImGui_Context* ctx, const char* label, double* v1InOut, double* v2InOut, double* v3InOut, double* v_speedInOptional, double* v_minInOptional, double* v_maxInOptional, const char* formatInOptional, int* flagsInOptional)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Default values: v_speed = 1.0, v_min = 0.0, v_max = 0.0, format = '%.3f', flags = ImGui_SliderFlags_None
        </description>        
        <retvals>
            boolean retval - 
            number v1 - 
            number v2 - 
            number v3 - -
        </retvals>        
        <parameters>
            ImGui_Context ctx - 
            string label - 
            number v1 - 
            number v2 - 
            number v3 - 
            optional number v_speedIn - 
            optional number v_minIn - 
            optional number v_maxIn - 
            optional string formatIn - 
            optional number flagsIn -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_DragDouble4</slug>
        <title>ImGui_DragDouble4</title>
        <functioncall prog_lang="cpp">bool ImGui_DragDouble4(ImGui_Context* ctx, const char* label, double* v1InOut, double* v2InOut, double* v3InOut, double* v4InOut, double* v_speedInOptional, double* v_minInOptional, double* v_maxInOptional, const char* formatInOptional, int* flagsInOptional)</functioncall>
        <functioncall prog_lang="eel">bool extension_api("ImGui_DragDouble4", ImGui_Context ctx, "label", &amp;v1, &amp;v2, &amp;v3, &amp;v4, optional v_speedIn, optional v_minIn, optional v_maxIn, optional "formatIn", optional int flagsIn)</functioncall>
        <functioncall prog_lang="lua">boolean retval, number v1, number v2, number v3, number v4 = reaper.ImGui_DragDouble4(ImGui_Context ctx, string label, number v1, number v2, number v3, number v4, optional number v_speedIn, optional number v_minIn, optional number v_maxIn, optional string formatIn, optional number flagsIn)</functioncall>
        <functioncall prog_lang="python">bool ImGui_DragDouble4(ImGui_Context* ctx, const char* label, double* v1InOut, double* v2InOut, double* v3InOut, double* v4InOut, double* v_speedInOptional, double* v_minInOptional, double* v_maxInOptional, const char* formatInOptional, int* flagsInOptional)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Default values: v_speed = 1.0, v_min = 0.0, v_max = 0.0, format = '%.3f', flags = ImGui_SliderFlags_None
        </description>        
        <retvals>
            boolean retval - 
            number v1 - 
            number v2 - 
            number v3 - 
            number v4 - -
        </retvals>        
        <parameters>
            ImGui_Context ctx - 
            string label - 
            number v1 - 
            number v2 - 
            number v3 - 
            number v4 - 
            optional number v_speedIn - 
            optional number v_minIn - 
            optional number v_maxIn - 
            optional string formatIn - 
            optional number flagsIn -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_DragDoubleN</slug>
        <title>ImGui_DragDoubleN</title>
        <functioncall prog_lang="cpp">bool ImGui_DragDoubleN(ImGui_Context* ctx, const char* label, reaper_array* values, double* speedInOptional, double* minInOptional, double* maxInOptional, const char* formatInOptional, int* flagsInOptional)</functioncall>
        <functioncall prog_lang="eel">bool extension_api("ImGui_DragDoubleN", ImGui_Context ctx, "label", reaper_array values, optional speedIn, optional minIn, optional maxIn, optional "formatIn", optional int flagsIn)</functioncall>
        <functioncall prog_lang="lua">boolean reaper.ImGui_DragDoubleN(ImGui_Context ctx, string labelreaper_array values, optional number speedIn, optional number minIn, optional number maxIn, optional string formatIn, optional number flagsIn)</functioncall>
        <functioncall prog_lang="python">bool ImGui_DragDoubleN(ImGui_Context* ctx, const char* label, reaper_array* values, double* speedInOptional, double* minInOptional, double* maxInOptional, const char* formatInOptional, int* flagsInOptional)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Default values: speed = 1.0, min = nil, max = nil, format = '%.3f', flags = ImGui_SliderFlags_None
        </description>        
        <retvals>
            boolean -
        </retvals>        
        <parameters>
            ImGui_Context ctx - 
            string labelreaper_array values - 
            optional number speedIn - 
            optional number minIn - 
            optional number maxIn - 
            optional string formatIn - 
            optional number flagsIn -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_DragDropFlags_AcceptBeforeDelivery</slug>
        <title>ImGui_DragDropFlags_AcceptBeforeDelivery</title>
        <functioncall prog_lang="cpp">int ImGui_DragDropFlags_AcceptBeforeDelivery()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_DragDropFlags_AcceptBeforeDelivery")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_DragDropFlags_AcceptBeforeDelivery()</functioncall>
        <functioncall prog_lang="python">int ImGui_DragDropFlags_AcceptBeforeDelivery()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            AcceptDragDropPayload() will returns true even before the mouse button is released. You can then call IsDelivery() to test if the payload needs to be delivered.
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_DragDropFlags_AcceptNoDrawDefaultRect</slug>
        <title>ImGui_DragDropFlags_AcceptNoDrawDefaultRect</title>
        <functioncall prog_lang="cpp">int ImGui_DragDropFlags_AcceptNoDrawDefaultRect()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_DragDropFlags_AcceptNoDrawDefaultRect")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_DragDropFlags_AcceptNoDrawDefaultRect()</functioncall>
        <functioncall prog_lang="python">int ImGui_DragDropFlags_AcceptNoDrawDefaultRect()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Do not draw the default highlight rectangle when hovering over target.
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_DragDropFlags_AcceptNoPreviewTooltip</slug>
        <title>ImGui_DragDropFlags_AcceptNoPreviewTooltip</title>
        <functioncall prog_lang="cpp">int ImGui_DragDropFlags_AcceptNoPreviewTooltip()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_DragDropFlags_AcceptNoPreviewTooltip")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_DragDropFlags_AcceptNoPreviewTooltip()</functioncall>
        <functioncall prog_lang="python">int ImGui_DragDropFlags_AcceptNoPreviewTooltip()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Request hiding the BeginDragDropSource tooltip from the BeginDragDropTarget site.
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_DragDropFlags_AcceptPeekOnly</slug>
        <title>ImGui_DragDropFlags_AcceptPeekOnly</title>
        <functioncall prog_lang="cpp">int ImGui_DragDropFlags_AcceptPeekOnly()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_DragDropFlags_AcceptPeekOnly")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_DragDropFlags_AcceptPeekOnly()</functioncall>
        <functioncall prog_lang="python">int ImGui_DragDropFlags_AcceptPeekOnly()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            For peeking ahead and inspecting the payload before delivery. Equivalent to ImGuiDragDropFlags_AcceptBeforeDelivery | ImGuiDragDropFlags_AcceptNoDrawDefaultRect.
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_DragDropFlags_None</slug>
        <title>ImGui_DragDropFlags_None</title>
        <functioncall prog_lang="cpp">int ImGui_DragDropFlags_None()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_DragDropFlags_None")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_DragDropFlags_None()</functioncall>
        <functioncall prog_lang="python">int ImGui_DragDropFlags_None()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Flags for ImGui::BeginDragDropSource(), ImGui::AcceptDragDropPayload()
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_DragDropFlags_SourceAllowNullID</slug>
        <title>ImGui_DragDropFlags_SourceAllowNullID</title>
        <functioncall prog_lang="cpp">int ImGui_DragDropFlags_SourceAllowNullID()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_DragDropFlags_SourceAllowNullID")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_DragDropFlags_SourceAllowNullID()</functioncall>
        <functioncall prog_lang="python">int ImGui_DragDropFlags_SourceAllowNullID()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Allow items such as Text(), Image() that have no unique identifier to be used as drag source, by manufacturing a temporary identifier based on their window-relative position. This is extremely unusual within the dear imgui ecosystem and so we made it explicit.
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_DragDropFlags_SourceAutoExpirePayload</slug>
        <title>ImGui_DragDropFlags_SourceAutoExpirePayload</title>
        <functioncall prog_lang="cpp">int ImGui_DragDropFlags_SourceAutoExpirePayload()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_DragDropFlags_SourceAutoExpirePayload")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_DragDropFlags_SourceAutoExpirePayload()</functioncall>
        <functioncall prog_lang="python">int ImGui_DragDropFlags_SourceAutoExpirePayload()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Automatically expire the payload if the source cease to be submitted (otherwise payloads are persisting while being dragged)
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_DragDropFlags_SourceExtern</slug>
        <title>ImGui_DragDropFlags_SourceExtern</title>
        <functioncall prog_lang="cpp">int ImGui_DragDropFlags_SourceExtern()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_DragDropFlags_SourceExtern")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_DragDropFlags_SourceExtern()</functioncall>
        <functioncall prog_lang="python">int ImGui_DragDropFlags_SourceExtern()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            External source (from outside of dear imgui), won't attempt to read current item/window info. Will always return true. Only one Extern source can be active simultaneously.
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_DragDropFlags_SourceNoDisableHover</slug>
        <title>ImGui_DragDropFlags_SourceNoDisableHover</title>
        <functioncall prog_lang="cpp">int ImGui_DragDropFlags_SourceNoDisableHover()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_DragDropFlags_SourceNoDisableHover")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_DragDropFlags_SourceNoDisableHover()</functioncall>
        <functioncall prog_lang="python">int ImGui_DragDropFlags_SourceNoDisableHover()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            By default, when dragging we clear data so that IsItemHovered() will return false, to avoid subsequent user code submitting tooltips. This flag disable this behavior so you can still call IsItemHovered() on the source item.
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_DragDropFlags_SourceNoHoldToOpenOthers</slug>
        <title>ImGui_DragDropFlags_SourceNoHoldToOpenOthers</title>
        <functioncall prog_lang="cpp">int ImGui_DragDropFlags_SourceNoHoldToOpenOthers()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_DragDropFlags_SourceNoHoldToOpenOthers")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_DragDropFlags_SourceNoHoldToOpenOthers()</functioncall>
        <functioncall prog_lang="python">int ImGui_DragDropFlags_SourceNoHoldToOpenOthers()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Disable the behavior that allows to open tree nodes and collapsing header by holding over them while dragging a source item.
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_DragDropFlags_SourceNoPreviewTooltip</slug>
        <title>ImGui_DragDropFlags_SourceNoPreviewTooltip</title>
        <functioncall prog_lang="cpp">int ImGui_DragDropFlags_SourceNoPreviewTooltip()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_DragDropFlags_SourceNoPreviewTooltip")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_DragDropFlags_SourceNoPreviewTooltip()</functioncall>
        <functioncall prog_lang="python">int ImGui_DragDropFlags_SourceNoPreviewTooltip()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            By default, a successful call to BeginDragDropSource opens a tooltip so you can display a preview or description of the source contents. This flag disable this behavior.
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_DragFloatRange2</slug>
        <title>ImGui_DragFloatRange2</title>
        <functioncall prog_lang="cpp">bool ImGui_DragFloatRange2(ImGui_Context* ctx, const char* label, double* v_current_minInOut, double* v_current_maxInOut, double* v_speedInOptional, double* v_minInOptional, double* v_maxInOptional, const char* formatInOptional, const char* format_maxInOptional, int* flagsInOptional)</functioncall>
        <functioncall prog_lang="eel">bool extension_api("ImGui_DragFloatRange2", ImGui_Context ctx, "label", &amp;v_current_min, &amp;v_current_max, optional v_speedIn, optional v_minIn, optional v_maxIn, optional "formatIn", optional "format_maxIn", optional int flagsIn)</functioncall>
        <functioncall prog_lang="lua">boolean retval, number v_current_min, number v_current_max = reaper.ImGui_DragFloatRange2(ImGui_Context ctx, string label, number v_current_min, number v_current_max, optional number v_speedIn, optional number v_minIn, optional number v_maxIn, optional string formatIn, optional string format_maxIn, optional number flagsIn)</functioncall>
        <functioncall prog_lang="python">bool ImGui_DragFloatRange2(ImGui_Context* ctx, const char* label, double* v_current_minInOut, double* v_current_maxInOut, double* v_speedInOptional, double* v_minInOptional, double* v_maxInOptional, const char* formatInOptional, const char* format_maxInOptional, int* flagsInOptional)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Default values: v_speed = 1.0, v_min = 0.0, v_max = 0.0, format = '%.3f', format_max = nil, flags = ImGui_SliderFlags_None
        </description>        
        <retvals>
            boolean retval - 
            number v_current_min - 
            number v_current_max - -
        </retvals>        
        <parameters>
            ImGui_Context ctx - 
            string label - 
            number v_current_min - 
            number v_current_max - 
            optional number v_speedIn - 
            optional number v_minIn - 
            optional number v_maxIn - 
            optional string formatIn - 
            optional string format_maxIn - 
            optional number flagsIn -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_DragInt</slug>
        <title>ImGui_DragInt</title>
        <functioncall prog_lang="cpp">bool ImGui_DragInt(ImGui_Context* ctx, const char* label, int* vInOut, double* v_speedInOptional, int* v_minInOptional, int* v_maxInOptional, const char* formatInOptional, int* flagsInOptional)</functioncall>
        <functioncall prog_lang="eel">bool extension_api("ImGui_DragInt", ImGui_Context ctx, "label", int &amp;v, optional v_speedIn, optional int v_minIn, optional int v_maxIn, optional "formatIn", optional int flagsIn)</functioncall>
        <functioncall prog_lang="lua">boolean retval, number v = reaper.ImGui_DragInt(ImGui_Context ctx, string label, number v, optional number v_speedIn, optional number v_minIn, optional number v_maxIn, optional string formatIn, optional number flagsIn)</functioncall>
        <functioncall prog_lang="python">bool ImGui_DragInt(ImGui_Context* ctx, const char* label, int* vInOut, double* v_speedInOptional, int* v_minInOptional, int* v_maxInOptional, const char* formatInOptional, int* flagsInOptional)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            - CTRL+Click on any drag box to turn them into an input box. Manually input values aren't clamped and can go off-bounds.
            - Adjust format string to decorate the value with a prefix, a suffix, or adapt the editing and display precision e.g. "%.3f" -&gt; 1.234; "%5.2f secs" -&gt; 01.23 secs; "Biscuit: %.0f" -&gt; Biscuit: 1; etc.
            - Format string may also be set to NULL or use the default format ("%f" or "%d").
            - Speed are per-pixel of mouse movement (v_speed=0.2f: mouse needs to move by 5 pixels to increase value by 1). For gamepad/keyboard navigation, minimum speed is Max(v_speed, minimum_step_at_given_precision).
            - Use v_min &lt; v_max to clamp edits to given limits. Note that CTRL+Click manual input can override those limits.
            - Use v_max = FLT_MAX / INT_MAX etc to avoid clamping to a maximum, same with v_min = -FLT_MAX / INT_MIN to avoid clamping to a minimum.
            - We use the same sets of flags for DragXXX() and SliderXXX() functions as the features are the same and it makes it easier to swap them.
            
            Default values: v_speed = 1.0, v_min = 0, v_max = 0, format = '%d', flags = ImGui_SliderFlags_None
        </description>        
        <retvals>
            boolean retval - 
            number v - -
        </retvals>        
        <parameters>
            ImGui_Context ctx - 
            string label - 
            number v - 
            optional number v_speedIn - 
            optional number v_minIn - 
            optional number v_maxIn - 
            optional string formatIn - 
            optional number flagsIn -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_DragInt2</slug>
        <title>ImGui_DragInt2</title>
        <functioncall prog_lang="cpp">bool ImGui_DragInt2(ImGui_Context* ctx, const char* label, int* v1InOut, int* v2InOut, double* v_speedInOptional, int* v_minInOptional, int* v_maxInOptional, const char* formatInOptional, int* flagsInOptional)</functioncall>
        <functioncall prog_lang="eel">bool extension_api("ImGui_DragInt2", ImGui_Context ctx, "label", int &amp;v1, int &amp;v2, optional v_speedIn, optional int v_minIn, optional int v_maxIn, optional "formatIn", optional int flagsIn)</functioncall>
        <functioncall prog_lang="lua">boolean retval, number v1, number v2 = reaper.ImGui_DragInt2(ImGui_Context ctx, string label, number v1, number v2, optional number v_speedIn, optional number v_minIn, optional number v_maxIn, optional string formatIn, optional number flagsIn)</functioncall>
        <functioncall prog_lang="python">bool ImGui_DragInt2(ImGui_Context* ctx, const char* label, int* v1InOut, int* v2InOut, double* v_speedInOptional, int* v_minInOptional, int* v_maxInOptional, const char* formatInOptional, int* flagsInOptional)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Default values: v_speed = 1.0, v_min = 0, v_max = 0, format = '%d', flags = ImGui_SliderFlags_None)
        </description>        
        <retvals>
            boolean retval - 
            number v1 - 
            number v2 - -
        </retvals>        
        <parameters>
            ImGui_Context ctx - 
            string label - 
            number v1 - 
            number v2 - 
            optional number v_speedIn - 
            optional number v_minIn - 
            optional number v_maxIn - 
            optional string formatIn - 
            optional number flagsIn -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_DragInt3</slug>
        <title>ImGui_DragInt3</title>
        <functioncall prog_lang="cpp">bool ImGui_DragInt3(ImGui_Context* ctx, const char* label, int* v1InOut, int* v2InOut, int* v3InOut, double* v_speedInOptional, int* v_minInOptional, int* v_maxInOptional, const char* formatInOptional, int* flagsInOptional)</functioncall>
        <functioncall prog_lang="eel">bool extension_api("ImGui_DragInt3", ImGui_Context ctx, "label", int &amp;v1, int &amp;v2, int &amp;v3, optional v_speedIn, optional int v_minIn, optional int v_maxIn, optional "formatIn", optional int flagsIn)</functioncall>
        <functioncall prog_lang="lua">boolean retval, number v1, number v2, number v3 = reaper.ImGui_DragInt3(ImGui_Context ctx, string label, number v1, number v2, number v3, optional number v_speedIn, optional number v_minIn, optional number v_maxIn, optional string formatIn, optional number flagsIn)</functioncall>
        <functioncall prog_lang="python">bool ImGui_DragInt3(ImGui_Context* ctx, const char* label, int* v1InOut, int* v2InOut, int* v3InOut, double* v_speedInOptional, int* v_minInOptional, int* v_maxInOptional, const char* formatInOptional, int* flagsInOptional)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Default values: v_speed = 1.0, v_min = 0, v_max = 0, format = '%d', flags = ImGui_SliderFlags_None)
        </description>        
        <retvals>
            boolean retval - 
            number v1 - 
            number v2 - 
            number v3 - -
        </retvals>        
        <parameters>
            ImGui_Context ctx - 
            string label - 
            number v1 - 
            number v2 - 
            number v3 - 
            optional number v_speedIn - 
            optional number v_minIn - 
            optional number v_maxIn - 
            optional string formatIn - 
            optional number flagsIn -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_DragInt4</slug>
        <title>ImGui_DragInt4</title>
        <functioncall prog_lang="cpp">bool ImGui_DragInt4(ImGui_Context* ctx, const char* label, int* v1InOut, int* v2InOut, int* v3InOut, int* v4InOut, double* v_speedInOptional, int* v_minInOptional, int* v_maxInOptional, const char* formatInOptional, int* flagsInOptional)</functioncall>
        <functioncall prog_lang="eel">bool extension_api("ImGui_DragInt4", ImGui_Context ctx, "label", int &amp;v1, int &amp;v2, int &amp;v3, int &amp;v4, optional v_speedIn, optional int v_minIn, optional int v_maxIn, optional "formatIn", optional int flagsIn)</functioncall>
        <functioncall prog_lang="lua">boolean retval, number v1, number v2, number v3, number v4 = reaper.ImGui_DragInt4(ImGui_Context ctx, string label, number v1, number v2, number v3, number v4, optional number v_speedIn, optional number v_minIn, optional number v_maxIn, optional string formatIn, optional number flagsIn)</functioncall>
        <functioncall prog_lang="python">bool ImGui_DragInt4(ImGui_Context* ctx, const char* label, int* v1InOut, int* v2InOut, int* v3InOut, int* v4InOut, double* v_speedInOptional, int* v_minInOptional, int* v_maxInOptional, const char* formatInOptional, int* flagsInOptional)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Default values: v_speed = 1.0, v_min = 0, v_max = 0, format = '%d', flags = ImGui_SliderFlags_None)
        </description>        
        <retvals>
            boolean retval - 
            number v1 - 
            number v2 - 
            number v3 - 
            number v4 - -
        </retvals>        
        <parameters>
            ImGui_Context ctx - 
            string label - 
            number v1 - 
            number v2 - 
            number v3 - 
            number v4 - 
            optional number v_speedIn - 
            optional number v_minIn - 
            optional number v_maxIn - 
            optional string formatIn - 
            optional number flagsIn -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_DragIntRange2</slug>
        <title>ImGui_DragIntRange2</title>
        <functioncall prog_lang="cpp">bool ImGui_DragIntRange2(ImGui_Context* ctx, const char* label, int* v_current_minInOut, int* v_current_maxInOut, double* v_speedInOptional, int* v_minInOptional, int* v_maxInOptional, const char* formatInOptional, const char* format_maxInOptional, int* flagsInOptional)</functioncall>
        <functioncall prog_lang="eel">bool extension_api("ImGui_DragIntRange2", ImGui_Context ctx, "label", int &amp;v_current_min, int &amp;v_current_max, optional v_speedIn, optional int v_minIn, optional int v_maxIn, optional "formatIn", optional "format_maxIn", optional int flagsIn)</functioncall>
        <functioncall prog_lang="lua">boolean retval, number v_current_min, number v_current_max = reaper.ImGui_DragIntRange2(ImGui_Context ctx, string label, number v_current_min, number v_current_max, optional number v_speedIn, optional number v_minIn, optional number v_maxIn, optional string formatIn, optional string format_maxIn, optional number flagsIn)</functioncall>
        <functioncall prog_lang="python">bool ImGui_DragIntRange2(ImGui_Context* ctx, const char* label, int* v_current_minInOut, int* v_current_maxInOut, double* v_speedInOptional, int* v_minInOptional, int* v_maxInOptional, const char* formatInOptional, const char* format_maxInOptional, int* flagsInOptional)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Default values: v_speed = 1.0, v_min = 0, v_max = 0, format = '%d', format_max = nil, flags = ImGui_SliderFlags_None
        </description>        
        <retvals>
            boolean retval - 
            number v_current_min - 
            number v_current_max - -
        </retvals>        
        <parameters>
            ImGui_Context ctx - 
            string label - 
            number v_current_min - 
            number v_current_max - 
            optional number v_speedIn - 
            optional number v_minIn - 
            optional number v_maxIn - 
            optional string formatIn - 
            optional string format_maxIn - 
            optional number flagsIn -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_DrawFlags_Closed</slug>
        <title>ImGui_DrawFlags_Closed</title>
        <functioncall prog_lang="cpp">int ImGui_DrawFlags_Closed()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_DrawFlags_Closed")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_DrawFlags_Closed()</functioncall>
        <functioncall prog_lang="python">int ImGui_DrawFlags_Closed()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            PathStroke(), AddPolyline(): specify that shape should be closed (Important: this is always == 1 for legacy reason)
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_DrawFlags_None</slug>
        <title>ImGui_DrawFlags_None</title>
        <functioncall prog_lang="cpp">int ImGui_DrawFlags_None()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_DrawFlags_None")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_DrawFlags_None()</functioncall>
        <functioncall prog_lang="python">int ImGui_DrawFlags_None()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_DrawFlags_RoundCornersAll</slug>
        <title>ImGui_DrawFlags_RoundCornersAll</title>
        <functioncall prog_lang="cpp">int ImGui_DrawFlags_RoundCornersAll()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_DrawFlags_RoundCornersAll")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_DrawFlags_RoundCornersAll()</functioncall>
        <functioncall prog_lang="python">int ImGui_DrawFlags_RoundCornersAll()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_DrawFlags_RoundCornersBottom</slug>
        <title>ImGui_DrawFlags_RoundCornersBottom</title>
        <functioncall prog_lang="cpp">int ImGui_DrawFlags_RoundCornersBottom()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_DrawFlags_RoundCornersBottom")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_DrawFlags_RoundCornersBottom()</functioncall>
        <functioncall prog_lang="python">int ImGui_DrawFlags_RoundCornersBottom()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_DrawFlags_RoundCornersBottomLeft</slug>
        <title>ImGui_DrawFlags_RoundCornersBottomLeft</title>
        <functioncall prog_lang="cpp">int ImGui_DrawFlags_RoundCornersBottomLeft()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_DrawFlags_RoundCornersBottomLeft")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_DrawFlags_RoundCornersBottomLeft()</functioncall>
        <functioncall prog_lang="python">int ImGui_DrawFlags_RoundCornersBottomLeft()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            AddRect(), AddRectFilled(), PathRect(): enable rounding bottom-left corner only (when rounding &gt; 0.0f, we default to all corners).
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_DrawFlags_RoundCornersBottomRight</slug>
        <title>ImGui_DrawFlags_RoundCornersBottomRight</title>
        <functioncall prog_lang="cpp">int ImGui_DrawFlags_RoundCornersBottomRight()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_DrawFlags_RoundCornersBottomRight")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_DrawFlags_RoundCornersBottomRight()</functioncall>
        <functioncall prog_lang="python">int ImGui_DrawFlags_RoundCornersBottomRight()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            AddRect(), AddRectFilled(), PathRect(): enable rounding bottom-right corner only (when rounding &gt; 0.0f, we default to all corners).
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_DrawFlags_RoundCornersLeft</slug>
        <title>ImGui_DrawFlags_RoundCornersLeft</title>
        <functioncall prog_lang="cpp">int ImGui_DrawFlags_RoundCornersLeft()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_DrawFlags_RoundCornersLeft")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_DrawFlags_RoundCornersLeft()</functioncall>
        <functioncall prog_lang="python">int ImGui_DrawFlags_RoundCornersLeft()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_DrawFlags_RoundCornersNone</slug>
        <title>ImGui_DrawFlags_RoundCornersNone</title>
        <functioncall prog_lang="cpp">int ImGui_DrawFlags_RoundCornersNone()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_DrawFlags_RoundCornersNone")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_DrawFlags_RoundCornersNone()</functioncall>
        <functioncall prog_lang="python">int ImGui_DrawFlags_RoundCornersNone()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            AddRect(), AddRectFilled(), PathRect(): disable rounding on all corners (when rounding &gt; 0.0f). This is NOT zero, NOT an implicit flag!
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_DrawFlags_RoundCornersRight</slug>
        <title>ImGui_DrawFlags_RoundCornersRight</title>
        <functioncall prog_lang="cpp">int ImGui_DrawFlags_RoundCornersRight()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_DrawFlags_RoundCornersRight")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_DrawFlags_RoundCornersRight()</functioncall>
        <functioncall prog_lang="python">int ImGui_DrawFlags_RoundCornersRight()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_DrawFlags_RoundCornersTop</slug>
        <title>ImGui_DrawFlags_RoundCornersTop</title>
        <functioncall prog_lang="cpp">int ImGui_DrawFlags_RoundCornersTop()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_DrawFlags_RoundCornersTop")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_DrawFlags_RoundCornersTop()</functioncall>
        <functioncall prog_lang="python">int ImGui_DrawFlags_RoundCornersTop()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_DrawFlags_RoundCornersTopLeft</slug>
        <title>ImGui_DrawFlags_RoundCornersTopLeft</title>
        <functioncall prog_lang="cpp">int ImGui_DrawFlags_RoundCornersTopLeft()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_DrawFlags_RoundCornersTopLeft")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_DrawFlags_RoundCornersTopLeft()</functioncall>
        <functioncall prog_lang="python">int ImGui_DrawFlags_RoundCornersTopLeft()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            AddRect(), AddRectFilled(), PathRect(): enable rounding top-left corner only (when rounding &gt; 0.0f, we default to all corners).
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_DrawFlags_RoundCornersTopRight</slug>
        <title>ImGui_DrawFlags_RoundCornersTopRight</title>
        <functioncall prog_lang="cpp">int ImGui_DrawFlags_RoundCornersTopRight()</functioncall>
        <functioncall prog_lang="eel">int extension_api("ImGui_DrawFlags_RoundCornersTopRight")</functioncall>
        <functioncall prog_lang="lua">integer reaper.ImGui_DrawFlags_RoundCornersTopRight()</functioncall>
        <functioncall prog_lang="python">int ImGui_DrawFlags_RoundCornersTopRight()</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            AddRect(), AddRectFilled(), PathRect(): enable rounding top-right corner only (when rounding &gt; 0.0f, we default to all corners).
        </description>        
        <retvals>
            integer -
        </retvals>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_DrawList_AddBezierCubic</slug>
        <title>ImGui_DrawList_AddBezierCubic</title>
        <functioncall prog_lang="cpp">void ImGui_DrawList_AddBezierCubic(ImGui_DrawList* draw_list, double p1_x, double p1_y, double p2_x, double p2_y, double p3_x, double p3_y, double p4_x, double p4_y, int col_rgba, double thickness, int* num_segmentsInOptional)</functioncall>
        <functioncall prog_lang="eel">extension_api("ImGui_DrawList_AddBezierCubic", ImGui_DrawList draw_list, p1_x, p1_y, p2_x, p2_y, p3_x, p3_y, p4_x, p4_y, int col_rgba, thickness, optional int num_segmentsIn)</functioncall>
        <functioncall prog_lang="lua">reaper.ImGui_DrawList_AddBezierCubic(ImGui_DrawList draw_list, number p1_x, number p1_y, number p2_x, number p2_y, number p3_x, number p3_y, number p4_x, number p4_y, integer col_rgba, number thickness, optional number num_segmentsIn)</functioncall>
        <functioncall prog_lang="python">void ImGui_DrawList_AddBezierCubic(ImGui_DrawList* draw_list, double p1_x, double p1_y, double p2_x, double p2_y, double p3_x, double p3_y, double p4_x, double p4_y, int col_rgba, double thickness, int* num_segmentsInOptional)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Cubic Bezier (4 control points)
            
            Default values: num_segments = 0
        </description>        
        <parameters>
            ImGui_DrawList draw_list - 
            number p1_x - 
            number p1_y - 
            number p2_x - 
            number p2_y - 
            number p3_x - 
            number p3_y - 
            number p4_x - 
            number p4_y - 
            integer col_rgba - 
            number thickness - 
            optional number num_segmentsIn -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_DrawList_AddBezierQuadratic</slug>
        <title>ImGui_DrawList_AddBezierQuadratic</title>
        <functioncall prog_lang="cpp">void ImGui_DrawList_AddBezierQuadratic(ImGui_DrawList* draw_list, double p1_x, double p1_y, double p2_x, double p2_y, double p3_x, double p3_y, int col_rgba, double thickness, int* num_segmentsInOptional)</functioncall>
        <functioncall prog_lang="eel">extension_api("ImGui_DrawList_AddBezierQuadratic", ImGui_DrawList draw_list, p1_x, p1_y, p2_x, p2_y, p3_x, p3_y, int col_rgba, thickness, optional int num_segmentsIn)</functioncall>
        <functioncall prog_lang="lua">reaper.ImGui_DrawList_AddBezierQuadratic(ImGui_DrawList draw_list, number p1_x, number p1_y, number p2_x, number p2_y, number p3_x, number p3_y, integer col_rgba, number thickness, optional number num_segmentsIn)</functioncall>
        <functioncall prog_lang="python">void ImGui_DrawList_AddBezierQuadratic(ImGui_DrawList* draw_list, double p1_x, double p1_y, double p2_x, double p2_y, double p3_x, double p3_y, int col_rgba, double thickness, int* num_segmentsInOptional)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Quadratic Bezier (3 control points)
            
            Default values: num_segments = 0
        </description>        
        <parameters>
            ImGui_DrawList draw_list - 
            number p1_x - 
            number p1_y - 
            number p2_x - 
            number p2_y - 
            number p3_x - 
            number p3_y - 
            integer col_rgba - 
            number thickness - 
            optional number num_segmentsIn -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_DrawList_AddCircle</slug>
        <title>ImGui_DrawList_AddCircle</title>
        <functioncall prog_lang="cpp">void ImGui_DrawList_AddCircle(ImGui_DrawList* draw_list, double center_x, double center_y, double radius, int col_rgba, int* num_segmentsInOptional, double* thicknessInOptional)</functioncall>
        <functioncall prog_lang="eel">extension_api("ImGui_DrawList_AddCircle", ImGui_DrawList draw_list, center_x, center_y, radius, int col_rgba, optional int num_segmentsIn, optional thicknessIn)</functioncall>
        <functioncall prog_lang="lua">reaper.ImGui_DrawList_AddCircle(ImGui_DrawList draw_list, number center_x, number center_y, number radius, integer col_rgba, optional number num_segmentsIn, optional number thicknessIn)</functioncall>
        <functioncall prog_lang="python">void ImGui_DrawList_AddCircle(ImGui_DrawList* draw_list, double center_x, double center_y, double radius, int col_rgba, int* num_segmentsInOptional, double* thicknessInOptional)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Use "num_segments == 0" to automatically calculate tessellation (preferred).
            
            Default values: num_segments = 0, thickness = 1.0
        </description>        
        <parameters>
            ImGui_DrawList draw_list - 
            number center_x - 
            number center_y - 
            number radius - 
            integer col_rgba - 
            optional number num_segmentsIn - 
            optional number thicknessIn -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_DrawList_AddCircleFilled</slug>
        <title>ImGui_DrawList_AddCircleFilled</title>
        <functioncall prog_lang="cpp">void ImGui_DrawList_AddCircleFilled(ImGui_DrawList* draw_list, double center_x, double center_y, double radius, int col_rgba, int* num_segmentsInOptional)</functioncall>
        <functioncall prog_lang="eel">extension_api("ImGui_DrawList_AddCircleFilled", ImGui_DrawList draw_list, center_x, center_y, radius, int col_rgba, optional int num_segmentsIn)</functioncall>
        <functioncall prog_lang="lua">reaper.ImGui_DrawList_AddCircleFilled(ImGui_DrawList draw_list, number center_x, number center_y, number radius, integer col_rgba, optional number num_segmentsIn)</functioncall>
        <functioncall prog_lang="python">void ImGui_DrawList_AddCircleFilled(ImGui_DrawList* draw_list, double center_x, double center_y, double radius, int col_rgba, int* num_segmentsInOptional)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Use "num_segments == 0" to automatically calculate tessellation (preferred).
            
            Default values: num_segments = 0
        </description>        
        <parameters>
            ImGui_DrawList draw_list - 
            number center_x - 
            number center_y - 
            number radius - 
            integer col_rgba - 
            optional number num_segmentsIn -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_DrawList_AddConvexPolyFilled</slug>
        <title>ImGui_DrawList_AddConvexPolyFilled</title>
        <functioncall prog_lang="cpp">void ImGui_DrawList_AddConvexPolyFilled(ImGui_DrawList* draw_list, reaper_array* points, int num_points, int col_rgba)</functioncall>
        <functioncall prog_lang="eel">extension_api("ImGui_DrawList_AddConvexPolyFilled", ImGui_DrawList draw_list, reaper_array points, int num_points, int col_rgba)</functioncall>
        <functioncall prog_lang="lua">reaper.ImGui_DrawList_AddConvexPolyFilled(ImGui_DrawList draw_listreaper_array points, integer num_points, integer col_rgba)</functioncall>
        <functioncall prog_lang="python">void ImGui_DrawList_AddConvexPolyFilled(ImGui_DrawList* draw_list, reaper_array* points, int num_points, int col_rgba)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Note: Anti-aliased filling requires points to be in clockwise order.
        </description>        
        <parameters>
            ImGui_DrawList draw_listreaper_array points - 
            integer num_points - 
            integer col_rgba -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_DrawList_AddLine</slug>
        <title>ImGui_DrawList_AddLine</title>
        <functioncall prog_lang="cpp">void ImGui_DrawList_AddLine(ImGui_DrawList* draw_list, double p1_x, double p1_y, double p2_x, double p2_y, int col_rgba, double* thicknessInOptional)</functioncall>
        <functioncall prog_lang="eel">extension_api("ImGui_DrawList_AddLine", ImGui_DrawList draw_list, p1_x, p1_y, p2_x, p2_y, int col_rgba, optional thicknessIn)</functioncall>
        <functioncall prog_lang="lua">reaper.ImGui_DrawList_AddLine(ImGui_DrawList draw_list, number p1_x, number p1_y, number p2_x, number p2_y, integer col_rgba, optional number thicknessIn)</functioncall>
        <functioncall prog_lang="python">void ImGui_DrawList_AddLine(ImGui_DrawList* draw_list, double p1_x, double p1_y, double p2_x, double p2_y, int col_rgba, double* thicknessInOptional)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Default values: thickness = 1.0
        </description>        
        <parameters>
            ImGui_DrawList draw_list - 
            number p1_x - 
            number p1_y - 
            number p2_x - 
            number p2_y - 
            integer col_rgba - 
            optional number thicknessIn -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_DrawList_AddNgon</slug>
        <title>ImGui_DrawList_AddNgon</title>
        <functioncall prog_lang="cpp">void ImGui_DrawList_AddNgon(ImGui_DrawList* draw_list, double center_x, double center_y, double radius, int col_rgba, int num_segments, double* thicknessInOptional)</functioncall>
        <functioncall prog_lang="eel">extension_api("ImGui_DrawList_AddNgon", ImGui_DrawList draw_list, center_x, center_y, radius, int col_rgba, int num_segments, optional thicknessIn)</functioncall>
        <functioncall prog_lang="lua">reaper.ImGui_DrawList_AddNgon(ImGui_DrawList draw_list, number center_x, number center_y, number radius, integer col_rgba, integer num_segments, optional number thicknessIn)</functioncall>
        <functioncall prog_lang="python">void ImGui_DrawList_AddNgon(ImGui_DrawList* draw_list, double center_x, double center_y, double radius, int col_rgba, int num_segments, double* thicknessInOptional)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Default values: thickness = 1.0
        </description>        
        <parameters>
            ImGui_DrawList draw_list - 
            number center_x - 
            number center_y - 
            number radius - 
            integer col_rgba - 
            integer num_segments - 
            optional number thicknessIn -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_DrawList_AddNgonFilled</slug>
        <title>ImGui_DrawList_AddNgonFilled</title>
        <functioncall prog_lang="cpp">void ImGui_DrawList_AddNgonFilled(ImGui_DrawList* draw_list, double center_x, double center_y, double radius, int col_rgba, int num_segments)</functioncall>
        <functioncall prog_lang="eel">extension_api("ImGui_DrawList_AddNgonFilled", ImGui_DrawList draw_list, center_x, center_y, radius, int col_rgba, int num_segments)</functioncall>
        <functioncall prog_lang="lua">reaper.ImGui_DrawList_AddNgonFilled(ImGui_DrawList draw_list, number center_x, number center_y, number radius, integer col_rgba, integer num_segments)</functioncall>
        <functioncall prog_lang="python">void ImGui_DrawList_AddNgonFilled(ImGui_DrawList* draw_list, double center_x, double center_y, double radius, int col_rgba, int num_segments)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
        </description>        
        <parameters>
            ImGui_DrawList draw_list - 
            number center_x - 
            number center_y - 
            number radius - 
            integer col_rgba - 
            integer num_segments -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
    
    <US_DocBloc version="1.0" spok_lang="en" prog_lang="*">
        <slug>ImGui_DrawList_AddPolyline</slug>
        <title>ImGui_DrawList_AddPolyline</title>
        <functioncall prog_lang="cpp">void ImGui_DrawList_AddPolyline(ImGui_DrawList* draw_list, reaper_array* points, int col_rgba, int flags, double thickness)</functioncall>
        <functioncall prog_lang="eel">extension_api("ImGui_DrawList_AddPolyline", ImGui_DrawList draw_list, reaper_array points, int col_rgba, int flags, thickness)</functioncall>
        <functioncall prog_lang="lua">reaper.ImGui_DrawList_AddPolyline(ImGui_DrawList draw_listreaper_array points, integer col_rgba, integer flags, number thickness)</functioncall>
        <functioncall prog_lang="python">void ImGui_DrawList_AddPolyline(ImGui_DrawList* draw_list, reaper_array* points, int col_rgba, int flags, double thickness)</functioncall>
        <requires>
            Reaper=6.23
            ReaImGui=0.4.1
        </requires>
        <description>
            
            Points is a list of x,y coordinates.
        </description>        
        <parameters>
            ImGui_DrawList draw_listreaper_array points - 
            integer col_rgba - 
            integer flags - 
            number thickness -
        </parameters>                
        <target_document>Reaper_Api_Documentation</target_document>
        <source_document>reaper-apidocs.USDocML</source_document>
        <chapter_context>
            ReaImGui
        </chapter_context>
        <tags>reaimgui, gui, user interface</tags>
    </US_DocBloc>
</USDocBloc>